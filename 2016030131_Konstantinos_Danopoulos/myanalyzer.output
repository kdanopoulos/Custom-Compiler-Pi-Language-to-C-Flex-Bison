Nonterminals useless in grammar

    total_functions


Terminals unused in grammar

    KW_NIL


Rules useless in grammar

  147 total_functions: single_function
  148                | total_functions single_function


Rules useless in parser due to conflicts

    2 decl_list: %empty
    3          | const_decl
    4          | var_decl
    6          | const_decl var_decl


State 0 conflicts: 1 shift/reduce
State 7 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 30 conflicts: 1 shift/reduce
State 89 conflicts: 14 shift/reduce
State 122 conflicts: 14 shift/reduce
State 123 conflicts: 14 shift/reduce
State 124 conflicts: 14 shift/reduce
State 125 conflicts: 14 shift/reduce
State 126 conflicts: 14 shift/reduce
State 127 conflicts: 14 shift/reduce
State 128 conflicts: 14 shift/reduce
State 129 conflicts: 14 shift/reduce
State 130 conflicts: 8 shift/reduce
State 131 conflicts: 8 shift/reduce
State 132 conflicts: 8 shift/reduce
State 133 conflicts: 8 shift/reduce
State 134 conflicts: 8 shift/reduce
State 135 conflicts: 8 shift/reduce
State 174 conflicts: 1 shift/reduce
State 216 conflicts: 1 shift/reduce
State 219 conflicts: 14 shift/reduce
State 259 conflicts: 14 shift/reduce
State 260 conflicts: 14 shift/reduce
State 261 conflicts: 14 shift/reduce
State 262 conflicts: 14 shift/reduce
State 263 conflicts: 14 shift/reduce
State 264 conflicts: 14 shift/reduce
State 265 conflicts: 14 shift/reduce
State 266 conflicts: 14 shift/reduce
State 267 conflicts: 8 shift/reduce
State 268 conflicts: 8 shift/reduce
State 269 conflicts: 8 shift/reduce
State 270 conflicts: 8 shift/reduce
State 271 conflicts: 8 shift/reduce
State 272 conflicts: 8 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_list KW_FUNC KW_BEGIN '(' ')' '{' body '}' ';'

    2 decl_list: %empty
    3          | const_decl
    4          | var_decl
    5          | single_function
    6          | const_decl var_decl
    7          | const_decl single_function
    8          | var_decl single_function
    9          | const_decl var_decl single_function

   10 body: %empty
   11     | body code

   12 predefined_functions: IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | KW_writeString '(' IDENTIFIER ')' ';'
   18                     | KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | KW_writeInt '(' calc ')' ';'
   20                     | KW_writeReal '(' calc ')' ';'

   21 code: predefined_functions
   22     | calculation
   23     | KW_IF '(' expr ')' execution_body ';'
   24     | KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   26     | KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   28     | KW_WHILE '(' expr ')' execution_body ';'
   29     | KW_BREAK ';'
   30     | KW_CONTINUE ';'
   31     | IDENTIFIER '(' call_func_var ')' ';'
   32     | IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | var_decl
   34     | return_action

   35 eleif: KW_ELSE_IF '(' expr ')' execution_body
   36      | eleif KW_ELSE_IF '(' expr ')' execution_body

   37 call_func_var: %empty
   38              | calc
   39              | call_func_var ',' calc

   40 execution_body: code
   41               | '{' body '}'

   42 calculation: IDENTIFIER ASSIGN calc ';'
   43            | IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'

   44 calculation_not_semicolon: IDENTIFIER ASSIGN calc

   45 calc: IDENTIFIER
   46     | '-' IDENTIFIER
   47     | IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | INTERGER_CONSTANT
   49     | FLOATING_POINT
   50     | CONSTANT_STRING
   51     | KW_TRUE
   52     | KW_FALSE
   53     | KW_NOT calc
   54     | calc '+' calc
   55     | calc '-' calc
   56     | calc STARSTAR calc
   57     | calc '*' calc
   58     | calc '/' calc
   59     | calc '%' calc
   60     | calc KW_AND calc
   61     | calc KW_OR calc
   62     | '(' calc ')'
   63     | calc ASSIGNASSIGN calc
   64     | calc NOTEQUAL calc
   65     | calc SMALLER calc
   66     | calc SMALLEREQUAL calc
   67     | calc BIGGER calc
   68     | calc BIGGEREQUAL calc

   69 expr: IDENTIFIER
   70     | '-' IDENTIFIER
   71     | INTERGER_CONSTANT
   72     | FLOATING_POINT
   73     | CONSTANT_STRING
   74     | KW_TRUE
   75     | KW_FALSE
   76     | expr '+' expr
   77     | expr '-' expr
   78     | expr STARSTAR expr
   79     | expr '*' expr
   80     | expr '/' expr
   81     | expr '%' expr
   82     | KW_NOT expr
   83     | expr KW_AND expr
   84     | expr KW_OR expr
   85     | expr ASSIGNASSIGN expr
   86     | expr NOTEQUAL expr
   87     | expr SMALLER expr
   88     | expr SMALLEREQUAL expr
   89     | expr BIGGER expr
   90     | expr BIGGEREQUAL expr
   91     | '(' expr ')'
   92     | IDENTIFIER '(' call_func_var ')'

   93 single_function: KW_FUNC IDENTIFIER '(' var_func_decl ')' func_type '{' body return_action '}' ';'

   94 var_func_decl: %empty
   95              | var_func_decl_2

   96 var_func_decl_2: single_var_func_decl
   97                | var_func_decl_2 ',' single_var_func_decl

   98 single_var_func_decl: IDENTIFIER KW_INT
   99                     | IDENTIFIER KW_REAL
  100                     | IDENTIFIER KW_STRING
  101                     | IDENTIFIER KW_BOOL
  102                     | IDENTIFIER '[' ']' KW_INT
  103                     | IDENTIFIER '[' ']' KW_REAL
  104                     | IDENTIFIER '[' ']' KW_STRING
  105                     | IDENTIFIER '[' ']' KW_BOOL

  106 return_action: KW_RETURN ';'
  107              | KW_RETURN calc ';'

  108 func_type: KW_INT
  109          | KW_REAL
  110          | KW_STRING
  111          | KW_BOOL
  112          | KW_VOID
  113          | '[' ']' KW_INT
  114          | '[' ']' KW_REAL
  115          | '[' ']' KW_STRING
  116          | '[' ']' KW_BOOL

  117 var_decl: single_var_decl
  118         | var_decl single_var_decl

  119 single_var_decl: KW_VAR list_decl KW_REAL ';'
  120                | KW_VAR list_decl KW_INT ';'
  121                | KW_VAR list_decl KW_STRING ';'
  122                | KW_VAR list_decl KW_BOOL ';'

  123 list_decl: single_decl
  124          | list_decl ',' single_decl

  125 single_decl: IDENTIFIER
  126            | IDENTIFIER '[' INTERGER_CONSTANT ']'
  127            | calculation_not_semicolon

  128 const_decl: single_line_const_decl
  129           | const_decl single_line_const_decl

  130 single_line_const_decl: KW_CONST list_real_assign KW_REAL ';'
  131                       | KW_CONST list_int_assign KW_INT ';'
  132                       | KW_CONST list_string_assign KW_STRING ';'
  133                       | KW_CONST list_bool_assign KW_BOOL ';'

  134 list_real_assign: real_assign_const
  135                 | list_real_assign ',' real_assign_const

  136 list_int_assign: int_assign_const
  137                | list_int_assign ',' int_assign_const

  138 list_string_assign: string_assign_const
  139                   | list_string_assign ',' string_assign_const

  140 list_bool_assign: bool_assign_const
  141                 | list_bool_assign ',' bool_assign_const

  142 real_assign_const: IDENTIFIER ASSIGN FLOATING_POINT

  143 int_assign_const: IDENTIFIER ASSIGN INTERGER_CONSTANT

  144 string_assign_const: IDENTIFIER ASSIGN CONSTANT_STRING

  145 bool_assign_const: IDENTIFIER ASSIGN KW_TRUE
  146                  | IDENTIFIER ASSIGN KW_FALSE


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 59 81
    '(' (40) 1 12 13 14 15 16 17 18 19 20 23 24 25 26 27 28 31 32 35 36 62 91 92 93
    ')' (41) 1 12 13 14 15 16 17 18 19 20 23 24 25 26 27 28 31 32 35 36 62 91 92 93
    '*' (42) 57 79
    '+' (43) 54 76
    ',' (44) 39 97 124 135 137 139 141
    '-' (45) 46 55 70 77
    '/' (47) 58 80
    ';' (59) 1 12 13 14 15 16 17 18 19 20 23 24 25 26 28 29 30 31 32 42 43 93 106 107 119 120 121 122 130 131 132 133
    '[' (91) 14 16 43 47 102 103 104 105 113 114 115 116 126
    ']' (93) 14 16 43 47 102 103 104 105 113 114 115 116 126
    '{' (123) 1 24 25 41 93
    '}' (125) 1 24 25 41 93
    error (256)
    ASSIGN (258) 12 13 14 15 16 32 42 43 44 142 143 144 145 146
    ASSIGNASSIGN (259) 63 85
    NOTEQUAL (260) 64 86
    SMALLER (261) 65 87
    SMALLEREQUAL (262) 66 88
    BIGGER (263) 67 89
    BIGGEREQUAL (264) 68 90
    KW_INT (265) 98 102 108 113 120 131
    KW_REAL (266) 99 103 109 114 119 130
    KW_STRING (267) 100 104 110 115 121 132
    KW_BOOL (268) 101 105 111 116 122 133
    KW_TRUE (269) 51 74 145
    KW_FALSE (270) 52 75 146
    KW_VAR (271) 119 120 121 122
    KW_CONST (272) 130 131 132 133
    KW_IF (273) 23 24 25
    KW_ELSE (274) 24 25
    KW_ELSE_IF (275) 35 36
    KW_FOR (276) 26 27
    KW_WHILE (277) 28
    KW_BREAK (278) 29
    KW_CONTINUE (279) 30
    KW_FUNC (280) 1 93
    KW_NIL (281)
    KW_AND (282) 60 83
    KW_OR (283) 61 84
    KW_NOT (284) 53 82
    KW_RETURN (285) 106 107
    KW_BEGIN (286) 1
    KW_VOID (287) 112
    KW_readString (288) 12
    KW_readInt (289) 13 14
    KW_readReal (290) 15 16
    KW_writeString (291) 17 18
    KW_writeInt (292) 19
    KW_writeReal (293) 20
    IDENTIFIER <crepr> (294) 12 13 14 15 16 17 31 32 42 43 44 45 46 47 69 70 92 93 98 99 100 101 102 103 104 105 125 126 142 143 144 145 146
    INTERGER_CONSTANT <integer> (295) 43 47 48 71 126 143
    FLOATING_POINT <real> (296) 49 72 142
    CONSTANT_STRING <crepr> (297) 18 50 73 144
    STARSTAR (298) 56 78


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    program (58)
        on left: 1
        on right: 0
    decl_list <crepr> (59)
        on left: 2 3 4 5 6 7 8 9
        on right: 1
    body <crepr> (60)
        on left: 10 11
        on right: 1 11 24 25 41 93
    predefined_functions <crepr> (61)
        on left: 12 13 14 15 16 17 18 19 20
        on right: 21
    code <crepr> (62)
        on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34
        on right: 11 40
    eleif <crepr> (63)
        on left: 35 36
        on right: 25 36
    call_func_var <crepr> (64)
        on left: 37 38 39
        on right: 31 32 39 92
    execution_body <crepr> (65)
        on left: 40 41
        on right: 23 24 25 26 27 28 35 36
    calculation <crepr> (66)
        on left: 42 43
        on right: 22 26 27
    calculation_not_semicolon <crepr> (67)
        on left: 44
        on right: 26 27 127
    calc <crepr> (68)
        on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
        on right: 14 16 19 20 38 39 42 43 44 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 107
    expr <crepr> (69)
        on left: 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
        on right: 23 24 25 26 28 35 36 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91
    single_function <crepr> (70)
        on left: 93
        on right: 5 7 8 9
    var_func_decl <crepr> (71)
        on left: 94 95
        on right: 93
    var_func_decl_2 <crepr> (72)
        on left: 96 97
        on right: 95 97
    single_var_func_decl <crepr> (73)
        on left: 98 99 100 101 102 103 104 105
        on right: 96 97
    return_action <crepr> (74)
        on left: 106 107
        on right: 34 93
    func_type <crepr> (75)
        on left: 108 109 110 111 112 113 114 115 116
        on right: 93
    var_decl <crepr> (76)
        on left: 117 118
        on right: 4 6 8 9 33 118
    single_var_decl <crepr> (77)
        on left: 119 120 121 122
        on right: 117 118
    list_decl <crepr> (78)
        on left: 123 124
        on right: 119 120 121 122 124
    single_decl <crepr> (79)
        on left: 125 126 127
        on right: 123 124
    const_decl <crepr> (80)
        on left: 128 129
        on right: 3 6 7 9 129
    single_line_const_decl <crepr> (81)
        on left: 130 131 132 133
        on right: 128 129
    list_real_assign <crepr> (82)
        on left: 134 135
        on right: 130 135
    list_int_assign <crepr> (83)
        on left: 136 137
        on right: 131 137
    list_string_assign <crepr> (84)
        on left: 138 139
        on right: 132 139
    list_bool_assign <crepr> (85)
        on left: 140 141
        on right: 133 141
    real_assign_const <crepr> (86)
        on left: 142
        on right: 134 135
    int_assign_const <crepr> (87)
        on left: 143
        on right: 136 137
    string_assign_const <crepr> (88)
        on left: 144
        on right: 138 139
    bool_assign_const <crepr> (89)
        on left: 145 146
        on right: 140 141


State 0

    0 $accept: . program $end
    1 program: . decl_list KW_FUNC KW_BEGIN '(' ')' '{' body '}' ';'
    2 decl_list: . %empty  [KW_FUNC]
    3          | . const_decl
    4          | . var_decl
    5          | . single_function
    6          | . const_decl var_decl
    7          | . const_decl single_function
    8          | . var_decl single_function
    9          | . const_decl var_decl single_function
   93 single_function: . KW_FUNC IDENTIFIER '(' var_func_decl ')' func_type '{' body return_action '}' ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'
  128 const_decl: . single_line_const_decl
  129           | . const_decl single_line_const_decl
  130 single_line_const_decl: . KW_CONST list_real_assign KW_REAL ';'
  131                       | . KW_CONST list_int_assign KW_INT ';'
  132                       | . KW_CONST list_string_assign KW_STRING ';'
  133                       | . KW_CONST list_bool_assign KW_BOOL ';'

    KW_VAR    shift, and go to state 1
    KW_CONST  shift, and go to state 2
    KW_FUNC   shift, and go to state 3

    KW_FUNC  [reduce using rule 2 (decl_list)]

    program                 go to state 4
    decl_list               go to state 5
    single_function         go to state 6
    var_decl                go to state 7
    single_var_decl         go to state 8
    const_decl              go to state 9
    single_line_const_decl  go to state 10


State 1

   44 calculation_not_semicolon: . IDENTIFIER ASSIGN calc
  119 single_var_decl: KW_VAR . list_decl KW_REAL ';'
  120                | KW_VAR . list_decl KW_INT ';'
  121                | KW_VAR . list_decl KW_STRING ';'
  122                | KW_VAR . list_decl KW_BOOL ';'
  123 list_decl: . single_decl
  124          | . list_decl ',' single_decl
  125 single_decl: . IDENTIFIER
  126            | . IDENTIFIER '[' INTERGER_CONSTANT ']'
  127            | . calculation_not_semicolon

    IDENTIFIER  shift, and go to state 11

    calculation_not_semicolon  go to state 12
    list_decl                  go to state 13
    single_decl                go to state 14


State 2

  130 single_line_const_decl: KW_CONST . list_real_assign KW_REAL ';'
  131                       | KW_CONST . list_int_assign KW_INT ';'
  132                       | KW_CONST . list_string_assign KW_STRING ';'
  133                       | KW_CONST . list_bool_assign KW_BOOL ';'
  134 list_real_assign: . real_assign_const
  135                 | . list_real_assign ',' real_assign_const
  136 list_int_assign: . int_assign_const
  137                | . list_int_assign ',' int_assign_const
  138 list_string_assign: . string_assign_const
  139                   | . list_string_assign ',' string_assign_const
  140 list_bool_assign: . bool_assign_const
  141                 | . list_bool_assign ',' bool_assign_const
  142 real_assign_const: . IDENTIFIER ASSIGN FLOATING_POINT
  143 int_assign_const: . IDENTIFIER ASSIGN INTERGER_CONSTANT
  144 string_assign_const: . IDENTIFIER ASSIGN CONSTANT_STRING
  145 bool_assign_const: . IDENTIFIER ASSIGN KW_TRUE
  146                  | . IDENTIFIER ASSIGN KW_FALSE

    IDENTIFIER  shift, and go to state 15

    list_real_assign     go to state 16
    list_int_assign      go to state 17
    list_string_assign   go to state 18
    list_bool_assign     go to state 19
    real_assign_const    go to state 20
    int_assign_const     go to state 21
    string_assign_const  go to state 22
    bool_assign_const    go to state 23


State 3

   93 single_function: KW_FUNC . IDENTIFIER '(' var_func_decl ')' func_type '{' body return_action '}' ';'

    IDENTIFIER  shift, and go to state 24


State 4

    0 $accept: program . $end

    $end  shift, and go to state 25


State 5

    1 program: decl_list . KW_FUNC KW_BEGIN '(' ')' '{' body '}' ';'

    KW_FUNC  shift, and go to state 26


State 6

    5 decl_list: single_function .

    $default  reduce using rule 5 (decl_list)


State 7

    4 decl_list: var_decl .  [KW_FUNC]
    8          | var_decl . single_function
   93 single_function: . KW_FUNC IDENTIFIER '(' var_func_decl ')' func_type '{' body return_action '}' ';'
  118 var_decl: var_decl . single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR   shift, and go to state 1
    KW_FUNC  shift, and go to state 3

    KW_FUNC  [reduce using rule 4 (decl_list)]

    single_function  go to state 27
    single_var_decl  go to state 28


State 8

  117 var_decl: single_var_decl .

    $default  reduce using rule 117 (var_decl)


State 9

    3 decl_list: const_decl .  [KW_FUNC]
    6          | const_decl . var_decl
    7          | const_decl . single_function
    9          | const_decl . var_decl single_function
   93 single_function: . KW_FUNC IDENTIFIER '(' var_func_decl ')' func_type '{' body return_action '}' ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'
  129 const_decl: const_decl . single_line_const_decl
  130 single_line_const_decl: . KW_CONST list_real_assign KW_REAL ';'
  131                       | . KW_CONST list_int_assign KW_INT ';'
  132                       | . KW_CONST list_string_assign KW_STRING ';'
  133                       | . KW_CONST list_bool_assign KW_BOOL ';'

    KW_VAR    shift, and go to state 1
    KW_CONST  shift, and go to state 2
    KW_FUNC   shift, and go to state 3

    KW_FUNC  [reduce using rule 3 (decl_list)]

    single_function         go to state 29
    var_decl                go to state 30
    single_var_decl         go to state 8
    single_line_const_decl  go to state 31


State 10

  128 const_decl: single_line_const_decl .

    $default  reduce using rule 128 (const_decl)


State 11

   44 calculation_not_semicolon: IDENTIFIER . ASSIGN calc
  125 single_decl: IDENTIFIER .  [KW_INT, KW_REAL, KW_STRING, KW_BOOL, ',']
  126            | IDENTIFIER . '[' INTERGER_CONSTANT ']'

    ASSIGN  shift, and go to state 32
    '['     shift, and go to state 33

    $default  reduce using rule 125 (single_decl)


State 12

  127 single_decl: calculation_not_semicolon .

    $default  reduce using rule 127 (single_decl)


State 13

  119 single_var_decl: KW_VAR list_decl . KW_REAL ';'
  120                | KW_VAR list_decl . KW_INT ';'
  121                | KW_VAR list_decl . KW_STRING ';'
  122                | KW_VAR list_decl . KW_BOOL ';'
  124 list_decl: list_decl . ',' single_decl

    KW_INT     shift, and go to state 34
    KW_REAL    shift, and go to state 35
    KW_STRING  shift, and go to state 36
    KW_BOOL    shift, and go to state 37
    ','        shift, and go to state 38


State 14

  123 list_decl: single_decl .

    $default  reduce using rule 123 (list_decl)


State 15

  142 real_assign_const: IDENTIFIER . ASSIGN FLOATING_POINT
  143 int_assign_const: IDENTIFIER . ASSIGN INTERGER_CONSTANT
  144 string_assign_const: IDENTIFIER . ASSIGN CONSTANT_STRING
  145 bool_assign_const: IDENTIFIER . ASSIGN KW_TRUE
  146                  | IDENTIFIER . ASSIGN KW_FALSE

    ASSIGN  shift, and go to state 39


State 16

  130 single_line_const_decl: KW_CONST list_real_assign . KW_REAL ';'
  135 list_real_assign: list_real_assign . ',' real_assign_const

    KW_REAL  shift, and go to state 40
    ','      shift, and go to state 41


State 17

  131 single_line_const_decl: KW_CONST list_int_assign . KW_INT ';'
  137 list_int_assign: list_int_assign . ',' int_assign_const

    KW_INT  shift, and go to state 42
    ','     shift, and go to state 43


State 18

  132 single_line_const_decl: KW_CONST list_string_assign . KW_STRING ';'
  139 list_string_assign: list_string_assign . ',' string_assign_const

    KW_STRING  shift, and go to state 44
    ','        shift, and go to state 45


State 19

  133 single_line_const_decl: KW_CONST list_bool_assign . KW_BOOL ';'
  141 list_bool_assign: list_bool_assign . ',' bool_assign_const

    KW_BOOL  shift, and go to state 46
    ','      shift, and go to state 47


State 20

  134 list_real_assign: real_assign_const .

    $default  reduce using rule 134 (list_real_assign)


State 21

  136 list_int_assign: int_assign_const .

    $default  reduce using rule 136 (list_int_assign)


State 22

  138 list_string_assign: string_assign_const .

    $default  reduce using rule 138 (list_string_assign)


State 23

  140 list_bool_assign: bool_assign_const .

    $default  reduce using rule 140 (list_bool_assign)


State 24

   93 single_function: KW_FUNC IDENTIFIER . '(' var_func_decl ')' func_type '{' body return_action '}' ';'

    '('  shift, and go to state 48


State 25

    0 $accept: program $end .

    $default  accept


State 26

    1 program: decl_list KW_FUNC . KW_BEGIN '(' ')' '{' body '}' ';'

    KW_BEGIN  shift, and go to state 49


State 27

    8 decl_list: var_decl single_function .

    $default  reduce using rule 8 (decl_list)


State 28

  118 var_decl: var_decl single_var_decl .

    $default  reduce using rule 118 (var_decl)


State 29

    7 decl_list: const_decl single_function .

    $default  reduce using rule 7 (decl_list)


State 30

    6 decl_list: const_decl var_decl .  [KW_FUNC]
    9          | const_decl var_decl . single_function
   93 single_function: . KW_FUNC IDENTIFIER '(' var_func_decl ')' func_type '{' body return_action '}' ';'
  118 var_decl: var_decl . single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR   shift, and go to state 1
    KW_FUNC  shift, and go to state 3

    KW_FUNC  [reduce using rule 6 (decl_list)]

    single_function  go to state 50
    single_var_decl  go to state 28


State 31

  129 const_decl: const_decl single_line_const_decl .

    $default  reduce using rule 129 (const_decl)


State 32

   44 calculation_not_semicolon: IDENTIFIER ASSIGN . calc
   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 60


State 33

  126 single_decl: IDENTIFIER '[' . INTERGER_CONSTANT ']'

    INTERGER_CONSTANT  shift, and go to state 61


State 34

  120 single_var_decl: KW_VAR list_decl KW_INT . ';'

    ';'  shift, and go to state 62


State 35

  119 single_var_decl: KW_VAR list_decl KW_REAL . ';'

    ';'  shift, and go to state 63


State 36

  121 single_var_decl: KW_VAR list_decl KW_STRING . ';'

    ';'  shift, and go to state 64


State 37

  122 single_var_decl: KW_VAR list_decl KW_BOOL . ';'

    ';'  shift, and go to state 65


State 38

   44 calculation_not_semicolon: . IDENTIFIER ASSIGN calc
  124 list_decl: list_decl ',' . single_decl
  125 single_decl: . IDENTIFIER
  126            | . IDENTIFIER '[' INTERGER_CONSTANT ']'
  127            | . calculation_not_semicolon

    IDENTIFIER  shift, and go to state 11

    calculation_not_semicolon  go to state 12
    single_decl                go to state 66


State 39

  142 real_assign_const: IDENTIFIER ASSIGN . FLOATING_POINT
  143 int_assign_const: IDENTIFIER ASSIGN . INTERGER_CONSTANT
  144 string_assign_const: IDENTIFIER ASSIGN . CONSTANT_STRING
  145 bool_assign_const: IDENTIFIER ASSIGN . KW_TRUE
  146                  | IDENTIFIER ASSIGN . KW_FALSE

    KW_TRUE            shift, and go to state 67
    KW_FALSE           shift, and go to state 68
    INTERGER_CONSTANT  shift, and go to state 69
    FLOATING_POINT     shift, and go to state 70
    CONSTANT_STRING    shift, and go to state 71


State 40

  130 single_line_const_decl: KW_CONST list_real_assign KW_REAL . ';'

    ';'  shift, and go to state 72


State 41

  135 list_real_assign: list_real_assign ',' . real_assign_const
  142 real_assign_const: . IDENTIFIER ASSIGN FLOATING_POINT

    IDENTIFIER  shift, and go to state 73

    real_assign_const  go to state 74


State 42

  131 single_line_const_decl: KW_CONST list_int_assign KW_INT . ';'

    ';'  shift, and go to state 75


State 43

  137 list_int_assign: list_int_assign ',' . int_assign_const
  143 int_assign_const: . IDENTIFIER ASSIGN INTERGER_CONSTANT

    IDENTIFIER  shift, and go to state 76

    int_assign_const  go to state 77


State 44

  132 single_line_const_decl: KW_CONST list_string_assign KW_STRING . ';'

    ';'  shift, and go to state 78


State 45

  139 list_string_assign: list_string_assign ',' . string_assign_const
  144 string_assign_const: . IDENTIFIER ASSIGN CONSTANT_STRING

    IDENTIFIER  shift, and go to state 79

    string_assign_const  go to state 80


State 46

  133 single_line_const_decl: KW_CONST list_bool_assign KW_BOOL . ';'

    ';'  shift, and go to state 81


State 47

  141 list_bool_assign: list_bool_assign ',' . bool_assign_const
  145 bool_assign_const: . IDENTIFIER ASSIGN KW_TRUE
  146                  | . IDENTIFIER ASSIGN KW_FALSE

    IDENTIFIER  shift, and go to state 82

    bool_assign_const  go to state 83


State 48

   93 single_function: KW_FUNC IDENTIFIER '(' . var_func_decl ')' func_type '{' body return_action '}' ';'
   94 var_func_decl: . %empty  [')']
   95              | . var_func_decl_2
   96 var_func_decl_2: . single_var_func_decl
   97                | . var_func_decl_2 ',' single_var_func_decl
   98 single_var_func_decl: . IDENTIFIER KW_INT
   99                     | . IDENTIFIER KW_REAL
  100                     | . IDENTIFIER KW_STRING
  101                     | . IDENTIFIER KW_BOOL
  102                     | . IDENTIFIER '[' ']' KW_INT
  103                     | . IDENTIFIER '[' ']' KW_REAL
  104                     | . IDENTIFIER '[' ']' KW_STRING
  105                     | . IDENTIFIER '[' ']' KW_BOOL

    IDENTIFIER  shift, and go to state 84

    $default  reduce using rule 94 (var_func_decl)

    var_func_decl         go to state 85
    var_func_decl_2       go to state 86
    single_var_func_decl  go to state 87


State 49

    1 program: decl_list KW_FUNC KW_BEGIN . '(' ')' '{' body '}' ';'

    '('  shift, and go to state 88


State 50

    9 decl_list: const_decl var_decl single_function .

    $default  reduce using rule 9 (decl_list)


State 51

   51 calc: KW_TRUE .

    $default  reduce using rule 51 (calc)


State 52

   52 calc: KW_FALSE .

    $default  reduce using rule 52 (calc)


State 53

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   53     | KW_NOT . calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 89


State 54

   45 calc: IDENTIFIER .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';', ']', ',']
   47     | IDENTIFIER . '[' INTERGER_CONSTANT ']'

    '['  shift, and go to state 90

    $default  reduce using rule 45 (calc)


State 55

   48 calc: INTERGER_CONSTANT .

    $default  reduce using rule 48 (calc)


State 56

   49 calc: FLOATING_POINT .

    $default  reduce using rule 49 (calc)


State 57

   50 calc: CONSTANT_STRING .

    $default  reduce using rule 50 (calc)


State 58

   46 calc: '-' . IDENTIFIER

    IDENTIFIER  shift, and go to state 91


State 59

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   62     | '(' . calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 92


State 60

   44 calculation_not_semicolon: IDENTIFIER ASSIGN calc .  [KW_INT, KW_REAL, KW_STRING, KW_BOOL, ')', ',']
   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    $default  reduce using rule 44 (calculation_not_semicolon)


State 61

  126 single_decl: IDENTIFIER '[' INTERGER_CONSTANT . ']'

    ']'  shift, and go to state 107


State 62

  120 single_var_decl: KW_VAR list_decl KW_INT ';' .

    $default  reduce using rule 120 (single_var_decl)


State 63

  119 single_var_decl: KW_VAR list_decl KW_REAL ';' .

    $default  reduce using rule 119 (single_var_decl)


State 64

  121 single_var_decl: KW_VAR list_decl KW_STRING ';' .

    $default  reduce using rule 121 (single_var_decl)


State 65

  122 single_var_decl: KW_VAR list_decl KW_BOOL ';' .

    $default  reduce using rule 122 (single_var_decl)


State 66

  124 list_decl: list_decl ',' single_decl .

    $default  reduce using rule 124 (list_decl)


State 67

  145 bool_assign_const: IDENTIFIER ASSIGN KW_TRUE .

    $default  reduce using rule 145 (bool_assign_const)


State 68

  146 bool_assign_const: IDENTIFIER ASSIGN KW_FALSE .

    $default  reduce using rule 146 (bool_assign_const)


State 69

  143 int_assign_const: IDENTIFIER ASSIGN INTERGER_CONSTANT .

    $default  reduce using rule 143 (int_assign_const)


State 70

  142 real_assign_const: IDENTIFIER ASSIGN FLOATING_POINT .

    $default  reduce using rule 142 (real_assign_const)


State 71

  144 string_assign_const: IDENTIFIER ASSIGN CONSTANT_STRING .

    $default  reduce using rule 144 (string_assign_const)


State 72

  130 single_line_const_decl: KW_CONST list_real_assign KW_REAL ';' .

    $default  reduce using rule 130 (single_line_const_decl)


State 73

  142 real_assign_const: IDENTIFIER . ASSIGN FLOATING_POINT

    ASSIGN  shift, and go to state 108


State 74

  135 list_real_assign: list_real_assign ',' real_assign_const .

    $default  reduce using rule 135 (list_real_assign)


State 75

  131 single_line_const_decl: KW_CONST list_int_assign KW_INT ';' .

    $default  reduce using rule 131 (single_line_const_decl)


State 76

  143 int_assign_const: IDENTIFIER . ASSIGN INTERGER_CONSTANT

    ASSIGN  shift, and go to state 109


State 77

  137 list_int_assign: list_int_assign ',' int_assign_const .

    $default  reduce using rule 137 (list_int_assign)


State 78

  132 single_line_const_decl: KW_CONST list_string_assign KW_STRING ';' .

    $default  reduce using rule 132 (single_line_const_decl)


State 79

  144 string_assign_const: IDENTIFIER . ASSIGN CONSTANT_STRING

    ASSIGN  shift, and go to state 110


State 80

  139 list_string_assign: list_string_assign ',' string_assign_const .

    $default  reduce using rule 139 (list_string_assign)


State 81

  133 single_line_const_decl: KW_CONST list_bool_assign KW_BOOL ';' .

    $default  reduce using rule 133 (single_line_const_decl)


State 82

  145 bool_assign_const: IDENTIFIER . ASSIGN KW_TRUE
  146                  | IDENTIFIER . ASSIGN KW_FALSE

    ASSIGN  shift, and go to state 111


State 83

  141 list_bool_assign: list_bool_assign ',' bool_assign_const .

    $default  reduce using rule 141 (list_bool_assign)


State 84

   98 single_var_func_decl: IDENTIFIER . KW_INT
   99                     | IDENTIFIER . KW_REAL
  100                     | IDENTIFIER . KW_STRING
  101                     | IDENTIFIER . KW_BOOL
  102                     | IDENTIFIER . '[' ']' KW_INT
  103                     | IDENTIFIER . '[' ']' KW_REAL
  104                     | IDENTIFIER . '[' ']' KW_STRING
  105                     | IDENTIFIER . '[' ']' KW_BOOL

    KW_INT     shift, and go to state 112
    KW_REAL    shift, and go to state 113
    KW_STRING  shift, and go to state 114
    KW_BOOL    shift, and go to state 115
    '['        shift, and go to state 116


State 85

   93 single_function: KW_FUNC IDENTIFIER '(' var_func_decl . ')' func_type '{' body return_action '}' ';'

    ')'  shift, and go to state 117


State 86

   95 var_func_decl: var_func_decl_2 .  [')']
   97 var_func_decl_2: var_func_decl_2 . ',' single_var_func_decl

    ','  shift, and go to state 118

    $default  reduce using rule 95 (var_func_decl)


State 87

   96 var_func_decl_2: single_var_func_decl .

    $default  reduce using rule 96 (var_func_decl_2)


State 88

    1 program: decl_list KW_FUNC KW_BEGIN '(' . ')' '{' body '}' ';'

    ')'  shift, and go to state 119


State 89

   53 calc: KW_NOT calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';', ']', ',']
   54     | calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 53 (calc)]
    NOTEQUAL      [reduce using rule 53 (calc)]
    SMALLER       [reduce using rule 53 (calc)]
    SMALLEREQUAL  [reduce using rule 53 (calc)]
    BIGGER        [reduce using rule 53 (calc)]
    BIGGEREQUAL   [reduce using rule 53 (calc)]
    KW_AND        [reduce using rule 53 (calc)]
    KW_OR         [reduce using rule 53 (calc)]
    '-'           [reduce using rule 53 (calc)]
    '+'           [reduce using rule 53 (calc)]
    '*'           [reduce using rule 53 (calc)]
    '/'           [reduce using rule 53 (calc)]
    '%'           [reduce using rule 53 (calc)]
    STARSTAR      [reduce using rule 53 (calc)]
    $default      reduce using rule 53 (calc)


State 90

   47 calc: IDENTIFIER '[' . INTERGER_CONSTANT ']'

    INTERGER_CONSTANT  shift, and go to state 120


State 91

   46 calc: '-' IDENTIFIER .

    $default  reduce using rule 46 (calc)


State 92

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   62     | '(' calc . ')'
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106
    ')'           shift, and go to state 121


State 93

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   63     | calc ASSIGNASSIGN . calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 122


State 94

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   64     | calc NOTEQUAL . calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 123


State 95

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   65     | calc SMALLER . calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 124


State 96

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   66     | calc SMALLEREQUAL . calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 125


State 97

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   67     | calc BIGGER . calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 126


State 98

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc
   68     | calc BIGGEREQUAL . calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 127


State 99

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   60     | calc KW_AND . calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 128


State 100

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   61     | calc KW_OR . calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 129


State 101

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   55     | calc '-' . calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 130


State 102

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   54     | calc '+' . calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 131


State 103

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   57     | calc '*' . calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 132


State 104

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   58     | calc '/' . calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 133


State 105

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   59     | calc '%' . calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 134


State 106

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   56     | calc STARSTAR . calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 135


State 107

  126 single_decl: IDENTIFIER '[' INTERGER_CONSTANT ']' .

    $default  reduce using rule 126 (single_decl)


State 108

  142 real_assign_const: IDENTIFIER ASSIGN . FLOATING_POINT

    FLOATING_POINT  shift, and go to state 70


State 109

  143 int_assign_const: IDENTIFIER ASSIGN . INTERGER_CONSTANT

    INTERGER_CONSTANT  shift, and go to state 69


State 110

  144 string_assign_const: IDENTIFIER ASSIGN . CONSTANT_STRING

    CONSTANT_STRING  shift, and go to state 71


State 111

  145 bool_assign_const: IDENTIFIER ASSIGN . KW_TRUE
  146                  | IDENTIFIER ASSIGN . KW_FALSE

    KW_TRUE   shift, and go to state 67
    KW_FALSE  shift, and go to state 68


State 112

   98 single_var_func_decl: IDENTIFIER KW_INT .

    $default  reduce using rule 98 (single_var_func_decl)


State 113

   99 single_var_func_decl: IDENTIFIER KW_REAL .

    $default  reduce using rule 99 (single_var_func_decl)


State 114

  100 single_var_func_decl: IDENTIFIER KW_STRING .

    $default  reduce using rule 100 (single_var_func_decl)


State 115

  101 single_var_func_decl: IDENTIFIER KW_BOOL .

    $default  reduce using rule 101 (single_var_func_decl)


State 116

  102 single_var_func_decl: IDENTIFIER '[' . ']' KW_INT
  103                     | IDENTIFIER '[' . ']' KW_REAL
  104                     | IDENTIFIER '[' . ']' KW_STRING
  105                     | IDENTIFIER '[' . ']' KW_BOOL

    ']'  shift, and go to state 136


State 117

   93 single_function: KW_FUNC IDENTIFIER '(' var_func_decl ')' . func_type '{' body return_action '}' ';'
  108 func_type: . KW_INT
  109          | . KW_REAL
  110          | . KW_STRING
  111          | . KW_BOOL
  112          | . KW_VOID
  113          | . '[' ']' KW_INT
  114          | . '[' ']' KW_REAL
  115          | . '[' ']' KW_STRING
  116          | . '[' ']' KW_BOOL

    KW_INT     shift, and go to state 137
    KW_REAL    shift, and go to state 138
    KW_STRING  shift, and go to state 139
    KW_BOOL    shift, and go to state 140
    KW_VOID    shift, and go to state 141
    '['        shift, and go to state 142

    func_type  go to state 143


State 118

   97 var_func_decl_2: var_func_decl_2 ',' . single_var_func_decl
   98 single_var_func_decl: . IDENTIFIER KW_INT
   99                     | . IDENTIFIER KW_REAL
  100                     | . IDENTIFIER KW_STRING
  101                     | . IDENTIFIER KW_BOOL
  102                     | . IDENTIFIER '[' ']' KW_INT
  103                     | . IDENTIFIER '[' ']' KW_REAL
  104                     | . IDENTIFIER '[' ']' KW_STRING
  105                     | . IDENTIFIER '[' ']' KW_BOOL

    IDENTIFIER  shift, and go to state 84

    single_var_func_decl  go to state 144


State 119

    1 program: decl_list KW_FUNC KW_BEGIN '(' ')' . '{' body '}' ';'

    '{'  shift, and go to state 145


State 120

   47 calc: IDENTIFIER '[' INTERGER_CONSTANT . ']'

    ']'  shift, and go to state 146


State 121

   62 calc: '(' calc ')' .

    $default  reduce using rule 62 (calc)


State 122

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   63     | calc ASSIGNASSIGN calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';', ']', ',']
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 63 (calc)]
    NOTEQUAL      [reduce using rule 63 (calc)]
    SMALLER       [reduce using rule 63 (calc)]
    SMALLEREQUAL  [reduce using rule 63 (calc)]
    BIGGER        [reduce using rule 63 (calc)]
    BIGGEREQUAL   [reduce using rule 63 (calc)]
    KW_AND        [reduce using rule 63 (calc)]
    KW_OR         [reduce using rule 63 (calc)]
    '-'           [reduce using rule 63 (calc)]
    '+'           [reduce using rule 63 (calc)]
    '*'           [reduce using rule 63 (calc)]
    '/'           [reduce using rule 63 (calc)]
    '%'           [reduce using rule 63 (calc)]
    STARSTAR      [reduce using rule 63 (calc)]
    $default      reduce using rule 63 (calc)


State 123

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   64     | calc NOTEQUAL calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';', ']', ',']
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 64 (calc)]
    NOTEQUAL      [reduce using rule 64 (calc)]
    SMALLER       [reduce using rule 64 (calc)]
    SMALLEREQUAL  [reduce using rule 64 (calc)]
    BIGGER        [reduce using rule 64 (calc)]
    BIGGEREQUAL   [reduce using rule 64 (calc)]
    KW_AND        [reduce using rule 64 (calc)]
    KW_OR         [reduce using rule 64 (calc)]
    '-'           [reduce using rule 64 (calc)]
    '+'           [reduce using rule 64 (calc)]
    '*'           [reduce using rule 64 (calc)]
    '/'           [reduce using rule 64 (calc)]
    '%'           [reduce using rule 64 (calc)]
    STARSTAR      [reduce using rule 64 (calc)]
    $default      reduce using rule 64 (calc)


State 124

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   65     | calc SMALLER calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';', ']', ',']
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 65 (calc)]
    NOTEQUAL      [reduce using rule 65 (calc)]
    SMALLER       [reduce using rule 65 (calc)]
    SMALLEREQUAL  [reduce using rule 65 (calc)]
    BIGGER        [reduce using rule 65 (calc)]
    BIGGEREQUAL   [reduce using rule 65 (calc)]
    KW_AND        [reduce using rule 65 (calc)]
    KW_OR         [reduce using rule 65 (calc)]
    '-'           [reduce using rule 65 (calc)]
    '+'           [reduce using rule 65 (calc)]
    '*'           [reduce using rule 65 (calc)]
    '/'           [reduce using rule 65 (calc)]
    '%'           [reduce using rule 65 (calc)]
    STARSTAR      [reduce using rule 65 (calc)]
    $default      reduce using rule 65 (calc)


State 125

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   66     | calc SMALLEREQUAL calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';', ']', ',']
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 66 (calc)]
    NOTEQUAL      [reduce using rule 66 (calc)]
    SMALLER       [reduce using rule 66 (calc)]
    SMALLEREQUAL  [reduce using rule 66 (calc)]
    BIGGER        [reduce using rule 66 (calc)]
    BIGGEREQUAL   [reduce using rule 66 (calc)]
    KW_AND        [reduce using rule 66 (calc)]
    KW_OR         [reduce using rule 66 (calc)]
    '-'           [reduce using rule 66 (calc)]
    '+'           [reduce using rule 66 (calc)]
    '*'           [reduce using rule 66 (calc)]
    '/'           [reduce using rule 66 (calc)]
    '%'           [reduce using rule 66 (calc)]
    STARSTAR      [reduce using rule 66 (calc)]
    $default      reduce using rule 66 (calc)


State 126

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   67     | calc BIGGER calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';', ']', ',']
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 67 (calc)]
    NOTEQUAL      [reduce using rule 67 (calc)]
    SMALLER       [reduce using rule 67 (calc)]
    SMALLEREQUAL  [reduce using rule 67 (calc)]
    BIGGER        [reduce using rule 67 (calc)]
    BIGGEREQUAL   [reduce using rule 67 (calc)]
    KW_AND        [reduce using rule 67 (calc)]
    KW_OR         [reduce using rule 67 (calc)]
    '-'           [reduce using rule 67 (calc)]
    '+'           [reduce using rule 67 (calc)]
    '*'           [reduce using rule 67 (calc)]
    '/'           [reduce using rule 67 (calc)]
    '%'           [reduce using rule 67 (calc)]
    STARSTAR      [reduce using rule 67 (calc)]
    $default      reduce using rule 67 (calc)


State 127

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc
   68     | calc BIGGEREQUAL calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';', ']', ',']

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 68 (calc)]
    NOTEQUAL      [reduce using rule 68 (calc)]
    SMALLER       [reduce using rule 68 (calc)]
    SMALLEREQUAL  [reduce using rule 68 (calc)]
    BIGGER        [reduce using rule 68 (calc)]
    BIGGEREQUAL   [reduce using rule 68 (calc)]
    KW_AND        [reduce using rule 68 (calc)]
    KW_OR         [reduce using rule 68 (calc)]
    '-'           [reduce using rule 68 (calc)]
    '+'           [reduce using rule 68 (calc)]
    '*'           [reduce using rule 68 (calc)]
    '/'           [reduce using rule 68 (calc)]
    '%'           [reduce using rule 68 (calc)]
    STARSTAR      [reduce using rule 68 (calc)]
    $default      reduce using rule 68 (calc)


State 128

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   60     | calc KW_AND calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';', ']', ',']
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 60 (calc)]
    NOTEQUAL      [reduce using rule 60 (calc)]
    SMALLER       [reduce using rule 60 (calc)]
    SMALLEREQUAL  [reduce using rule 60 (calc)]
    BIGGER        [reduce using rule 60 (calc)]
    BIGGEREQUAL   [reduce using rule 60 (calc)]
    KW_AND        [reduce using rule 60 (calc)]
    KW_OR         [reduce using rule 60 (calc)]
    '-'           [reduce using rule 60 (calc)]
    '+'           [reduce using rule 60 (calc)]
    '*'           [reduce using rule 60 (calc)]
    '/'           [reduce using rule 60 (calc)]
    '%'           [reduce using rule 60 (calc)]
    STARSTAR      [reduce using rule 60 (calc)]
    $default      reduce using rule 60 (calc)


State 129

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   61     | calc KW_OR calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';', ']', ',']
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 61 (calc)]
    NOTEQUAL      [reduce using rule 61 (calc)]
    SMALLER       [reduce using rule 61 (calc)]
    SMALLEREQUAL  [reduce using rule 61 (calc)]
    BIGGER        [reduce using rule 61 (calc)]
    BIGGEREQUAL   [reduce using rule 61 (calc)]
    KW_AND        [reduce using rule 61 (calc)]
    KW_OR         [reduce using rule 61 (calc)]
    '-'           [reduce using rule 61 (calc)]
    '+'           [reduce using rule 61 (calc)]
    '*'           [reduce using rule 61 (calc)]
    '/'           [reduce using rule 61 (calc)]
    '%'           [reduce using rule 61 (calc)]
    STARSTAR      [reduce using rule 61 (calc)]
    $default      reduce using rule 61 (calc)


State 130

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   55     | calc '-' calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', ')', ';', ']', ',']
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 55 (calc)]
    NOTEQUAL      [reduce using rule 55 (calc)]
    SMALLER       [reduce using rule 55 (calc)]
    SMALLEREQUAL  [reduce using rule 55 (calc)]
    BIGGER        [reduce using rule 55 (calc)]
    BIGGEREQUAL   [reduce using rule 55 (calc)]
    KW_AND        [reduce using rule 55 (calc)]
    KW_OR         [reduce using rule 55 (calc)]
    $default      reduce using rule 55 (calc)

    Conflict between rule 55 and token '-' resolved as reduce (%left '-').
    Conflict between rule 55 and token '+' resolved as reduce (%left '+').
    Conflict between rule 55 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 55 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 55 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 55 and token STARSTAR resolved as shift ('-' < STARSTAR).


State 131

   54 calc: calc . '+' calc
   54     | calc '+' calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', ')', ';', ']', ',']
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 54 (calc)]
    NOTEQUAL      [reduce using rule 54 (calc)]
    SMALLER       [reduce using rule 54 (calc)]
    SMALLEREQUAL  [reduce using rule 54 (calc)]
    BIGGER        [reduce using rule 54 (calc)]
    BIGGEREQUAL   [reduce using rule 54 (calc)]
    KW_AND        [reduce using rule 54 (calc)]
    KW_OR         [reduce using rule 54 (calc)]
    $default      reduce using rule 54 (calc)

    Conflict between rule 54 and token '-' resolved as reduce (%left '-').
    Conflict between rule 54 and token '+' resolved as reduce (%left '+').
    Conflict between rule 54 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 54 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 54 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 54 and token STARSTAR resolved as shift ('+' < STARSTAR).


State 132

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   57     | calc '*' calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', ')', ';', ']', ',']
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 57 (calc)]
    NOTEQUAL      [reduce using rule 57 (calc)]
    SMALLER       [reduce using rule 57 (calc)]
    SMALLEREQUAL  [reduce using rule 57 (calc)]
    BIGGER        [reduce using rule 57 (calc)]
    BIGGEREQUAL   [reduce using rule 57 (calc)]
    KW_AND        [reduce using rule 57 (calc)]
    KW_OR         [reduce using rule 57 (calc)]
    $default      reduce using rule 57 (calc)

    Conflict between rule 57 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 57 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 57 and token '*' resolved as reduce (%left '*').
    Conflict between rule 57 and token '/' resolved as reduce (%left '/').
    Conflict between rule 57 and token '%' resolved as reduce (%left '%').
    Conflict between rule 57 and token STARSTAR resolved as shift ('*' < STARSTAR).


State 133

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   58     | calc '/' calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', ')', ';', ']', ',']
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 58 (calc)]
    NOTEQUAL      [reduce using rule 58 (calc)]
    SMALLER       [reduce using rule 58 (calc)]
    SMALLEREQUAL  [reduce using rule 58 (calc)]
    BIGGER        [reduce using rule 58 (calc)]
    BIGGEREQUAL   [reduce using rule 58 (calc)]
    KW_AND        [reduce using rule 58 (calc)]
    KW_OR         [reduce using rule 58 (calc)]
    $default      reduce using rule 58 (calc)

    Conflict between rule 58 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 58 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 58 and token '*' resolved as reduce (%left '*').
    Conflict between rule 58 and token '/' resolved as reduce (%left '/').
    Conflict between rule 58 and token '%' resolved as reduce (%left '%').
    Conflict between rule 58 and token STARSTAR resolved as shift ('/' < STARSTAR).


State 134

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   59     | calc '%' calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', ')', ';', ']', ',']
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    STARSTAR      shift, and go to state 106

    ASSIGNASSIGN  [reduce using rule 59 (calc)]
    NOTEQUAL      [reduce using rule 59 (calc)]
    SMALLER       [reduce using rule 59 (calc)]
    SMALLEREQUAL  [reduce using rule 59 (calc)]
    BIGGER        [reduce using rule 59 (calc)]
    BIGGEREQUAL   [reduce using rule 59 (calc)]
    KW_AND        [reduce using rule 59 (calc)]
    KW_OR         [reduce using rule 59 (calc)]
    $default      reduce using rule 59 (calc)

    Conflict between rule 59 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 59 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 59 and token '*' resolved as reduce (%left '*').
    Conflict between rule 59 and token '/' resolved as reduce (%left '/').
    Conflict between rule 59 and token '%' resolved as reduce (%left '%').
    Conflict between rule 59 and token STARSTAR resolved as shift ('%' < STARSTAR).


State 135

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   56     | calc STARSTAR calc .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_INT, KW_REAL, KW_STRING, KW_BOOL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';', ']', ',']
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100

    ASSIGNASSIGN  [reduce using rule 56 (calc)]
    NOTEQUAL      [reduce using rule 56 (calc)]
    SMALLER       [reduce using rule 56 (calc)]
    SMALLEREQUAL  [reduce using rule 56 (calc)]
    BIGGER        [reduce using rule 56 (calc)]
    BIGGEREQUAL   [reduce using rule 56 (calc)]
    KW_AND        [reduce using rule 56 (calc)]
    KW_OR         [reduce using rule 56 (calc)]
    $default      reduce using rule 56 (calc)

    Conflict between rule 56 and token '-' resolved as reduce ('-' < STARSTAR).
    Conflict between rule 56 and token '+' resolved as reduce ('+' < STARSTAR).
    Conflict between rule 56 and token '*' resolved as reduce ('*' < STARSTAR).
    Conflict between rule 56 and token '/' resolved as reduce ('/' < STARSTAR).
    Conflict between rule 56 and token '%' resolved as reduce ('%' < STARSTAR).
    Conflict between rule 56 and token STARSTAR resolved as reduce (%left STARSTAR).


State 136

  102 single_var_func_decl: IDENTIFIER '[' ']' . KW_INT
  103                     | IDENTIFIER '[' ']' . KW_REAL
  104                     | IDENTIFIER '[' ']' . KW_STRING
  105                     | IDENTIFIER '[' ']' . KW_BOOL

    KW_INT     shift, and go to state 147
    KW_REAL    shift, and go to state 148
    KW_STRING  shift, and go to state 149
    KW_BOOL    shift, and go to state 150


State 137

  108 func_type: KW_INT .

    $default  reduce using rule 108 (func_type)


State 138

  109 func_type: KW_REAL .

    $default  reduce using rule 109 (func_type)


State 139

  110 func_type: KW_STRING .

    $default  reduce using rule 110 (func_type)


State 140

  111 func_type: KW_BOOL .

    $default  reduce using rule 111 (func_type)


State 141

  112 func_type: KW_VOID .

    $default  reduce using rule 112 (func_type)


State 142

  113 func_type: '[' . ']' KW_INT
  114          | '[' . ']' KW_REAL
  115          | '[' . ']' KW_STRING
  116          | '[' . ']' KW_BOOL

    ']'  shift, and go to state 151


State 143

   93 single_function: KW_FUNC IDENTIFIER '(' var_func_decl ')' func_type . '{' body return_action '}' ';'

    '{'  shift, and go to state 152


State 144

   97 var_func_decl_2: var_func_decl_2 ',' single_var_func_decl .

    $default  reduce using rule 97 (var_func_decl_2)


State 145

    1 program: decl_list KW_FUNC KW_BEGIN '(' ')' '{' . body '}' ';'
   10 body: . %empty
   11     | . body code

    $default  reduce using rule 10 (body)

    body  go to state 153


State 146

   47 calc: IDENTIFIER '[' INTERGER_CONSTANT ']' .

    $default  reduce using rule 47 (calc)


State 147

  102 single_var_func_decl: IDENTIFIER '[' ']' KW_INT .

    $default  reduce using rule 102 (single_var_func_decl)


State 148

  103 single_var_func_decl: IDENTIFIER '[' ']' KW_REAL .

    $default  reduce using rule 103 (single_var_func_decl)


State 149

  104 single_var_func_decl: IDENTIFIER '[' ']' KW_STRING .

    $default  reduce using rule 104 (single_var_func_decl)


State 150

  105 single_var_func_decl: IDENTIFIER '[' ']' KW_BOOL .

    $default  reduce using rule 105 (single_var_func_decl)


State 151

  113 func_type: '[' ']' . KW_INT
  114          | '[' ']' . KW_REAL
  115          | '[' ']' . KW_STRING
  116          | '[' ']' . KW_BOOL

    KW_INT     shift, and go to state 154
    KW_REAL    shift, and go to state 155
    KW_STRING  shift, and go to state 156
    KW_BOOL    shift, and go to state 157


State 152

   10 body: . %empty
   11     | . body code
   93 single_function: KW_FUNC IDENTIFIER '(' var_func_decl ')' func_type '{' . body return_action '}' ';'

    $default  reduce using rule 10 (body)

    body  go to state 158


State 153

    1 program: decl_list KW_FUNC KW_BEGIN '(' ')' '{' body . '}' ';'
   11 body: body . code
   12 predefined_functions: . IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | . IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | . IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | . KW_writeString '(' IDENTIFIER ')' ';'
   18                     | . KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | . KW_writeInt '(' calc ')' ';'
   20                     | . KW_writeReal '(' calc ')' ';'
   21 code: . predefined_functions
   22     | . calculation
   23     | . KW_IF '(' expr ')' execution_body ';'
   24     | . KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | . KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   26     | . KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | . KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   28     | . KW_WHILE '(' expr ')' execution_body ';'
   29     | . KW_BREAK ';'
   30     | . KW_CONTINUE ';'
   31     | . IDENTIFIER '(' call_func_var ')' ';'
   32     | . IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | . var_decl
   34     | . return_action
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'
  106 return_action: . KW_RETURN ';'
  107              | . KW_RETURN calc ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR          shift, and go to state 1
    KW_IF           shift, and go to state 159
    KW_FOR          shift, and go to state 160
    KW_WHILE        shift, and go to state 161
    KW_BREAK        shift, and go to state 162
    KW_CONTINUE     shift, and go to state 163
    KW_RETURN       shift, and go to state 164
    KW_writeString  shift, and go to state 165
    KW_writeInt     shift, and go to state 166
    KW_writeReal    shift, and go to state 167
    IDENTIFIER      shift, and go to state 168
    '}'             shift, and go to state 169

    predefined_functions  go to state 170
    code                  go to state 171
    calculation           go to state 172
    return_action         go to state 173
    var_decl              go to state 174
    single_var_decl       go to state 8


State 154

  113 func_type: '[' ']' KW_INT .

    $default  reduce using rule 113 (func_type)


State 155

  114 func_type: '[' ']' KW_REAL .

    $default  reduce using rule 114 (func_type)


State 156

  115 func_type: '[' ']' KW_STRING .

    $default  reduce using rule 115 (func_type)


State 157

  116 func_type: '[' ']' KW_BOOL .

    $default  reduce using rule 116 (func_type)


State 158

   11 body: body . code
   12 predefined_functions: . IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | . IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | . IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | . KW_writeString '(' IDENTIFIER ')' ';'
   18                     | . KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | . KW_writeInt '(' calc ')' ';'
   20                     | . KW_writeReal '(' calc ')' ';'
   21 code: . predefined_functions
   22     | . calculation
   23     | . KW_IF '(' expr ')' execution_body ';'
   24     | . KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | . KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   26     | . KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | . KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   28     | . KW_WHILE '(' expr ')' execution_body ';'
   29     | . KW_BREAK ';'
   30     | . KW_CONTINUE ';'
   31     | . IDENTIFIER '(' call_func_var ')' ';'
   32     | . IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | . var_decl
   34     | . return_action
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'
   93 single_function: KW_FUNC IDENTIFIER '(' var_func_decl ')' func_type '{' body . return_action '}' ';'
  106 return_action: . KW_RETURN ';'
  107              | . KW_RETURN calc ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR          shift, and go to state 1
    KW_IF           shift, and go to state 159
    KW_FOR          shift, and go to state 160
    KW_WHILE        shift, and go to state 161
    KW_BREAK        shift, and go to state 162
    KW_CONTINUE     shift, and go to state 163
    KW_RETURN       shift, and go to state 164
    KW_writeString  shift, and go to state 165
    KW_writeInt     shift, and go to state 166
    KW_writeReal    shift, and go to state 167
    IDENTIFIER      shift, and go to state 168

    predefined_functions  go to state 170
    code                  go to state 171
    calculation           go to state 172
    return_action         go to state 175
    var_decl              go to state 174
    single_var_decl       go to state 8


State 159

   23 code: KW_IF . '(' expr ')' execution_body ';'
   24     | KW_IF . '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | KW_IF . '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'

    '('  shift, and go to state 176


State 160

   26 code: KW_FOR . '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | KW_FOR . '(' calculation calculation_not_semicolon ')' execution_body

    '('  shift, and go to state 177


State 161

   28 code: KW_WHILE . '(' expr ')' execution_body ';'

    '('  shift, and go to state 178


State 162

   29 code: KW_BREAK . ';'

    ';'  shift, and go to state 179


State 163

   30 code: KW_CONTINUE . ';'

    ';'  shift, and go to state 180


State 164

   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc
  106 return_action: KW_RETURN . ';'
  107              | KW_RETURN . calc ';'

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59
    ';'                shift, and go to state 181

    calc  go to state 182


State 165

   17 predefined_functions: KW_writeString . '(' IDENTIFIER ')' ';'
   18                     | KW_writeString . '(' CONSTANT_STRING ')' ';'

    '('  shift, and go to state 183


State 166

   19 predefined_functions: KW_writeInt . '(' calc ')' ';'

    '('  shift, and go to state 184


State 167

   20 predefined_functions: KW_writeReal . '(' calc ')' ';'

    '('  shift, and go to state 185


State 168

   12 predefined_functions: IDENTIFIER . ASSIGN KW_readString '(' ')' ';'
   13                     | IDENTIFIER . ASSIGN KW_readInt '(' ')' ';'
   14                     | IDENTIFIER . '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | IDENTIFIER . ASSIGN KW_readReal '(' ')' ';'
   16                     | IDENTIFIER . '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   31 code: IDENTIFIER . '(' call_func_var ')' ';'
   32     | IDENTIFIER . ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   42 calculation: IDENTIFIER . ASSIGN calc ';'
   43            | IDENTIFIER . '[' INTERGER_CONSTANT ']' ASSIGN calc ';'

    ASSIGN  shift, and go to state 186
    '('     shift, and go to state 187
    '['     shift, and go to state 188


State 169

    1 program: decl_list KW_FUNC KW_BEGIN '(' ')' '{' body '}' . ';'

    ';'  shift, and go to state 189


State 170

   21 code: predefined_functions .

    $default  reduce using rule 21 (code)


State 171

   11 body: body code .

    $default  reduce using rule 11 (body)


State 172

   22 code: calculation .

    $default  reduce using rule 22 (code)


State 173

   34 code: return_action .

    $default  reduce using rule 34 (code)


State 174

   33 code: var_decl .  [KW_VAR, KW_IF, KW_ELSE, KW_ELSE_IF, KW_FOR, KW_WHILE, KW_BREAK, KW_CONTINUE, KW_RETURN, KW_writeString, KW_writeInt, KW_writeReal, IDENTIFIER, '}', ';']
  118 var_decl: var_decl . single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR  shift, and go to state 1

    KW_VAR    [reduce using rule 33 (code)]
    $default  reduce using rule 33 (code)

    single_var_decl  go to state 28


State 175

   34 code: return_action .  [KW_VAR, KW_IF, KW_FOR, KW_WHILE, KW_BREAK, KW_CONTINUE, KW_RETURN, KW_writeString, KW_writeInt, KW_writeReal, IDENTIFIER]
   93 single_function: KW_FUNC IDENTIFIER '(' var_func_decl ')' func_type '{' body return_action . '}' ';'

    '}'  shift, and go to state 190

    $default  reduce using rule 34 (code)


State 176

   23 code: KW_IF '(' . expr ')' execution_body ';'
   24     | KW_IF '(' . expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | KW_IF '(' . expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 200


State 177

   26 code: KW_FOR '(' . calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | KW_FOR '(' . calculation calculation_not_semicolon ')' execution_body
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'

    IDENTIFIER  shift, and go to state 201

    calculation  go to state 202


State 178

   28 code: KW_WHILE '(' . expr ')' execution_body ';'
   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 203


State 179

   29 code: KW_BREAK ';' .

    $default  reduce using rule 29 (code)


State 180

   30 code: KW_CONTINUE ';' .

    $default  reduce using rule 30 (code)


State 181

  106 return_action: KW_RETURN ';' .

    $default  reduce using rule 106 (return_action)


State 182

   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc
  107 return_action: KW_RETURN calc . ';'

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106
    ';'           shift, and go to state 204


State 183

   17 predefined_functions: KW_writeString '(' . IDENTIFIER ')' ';'
   18                     | KW_writeString '(' . CONSTANT_STRING ')' ';'

    IDENTIFIER       shift, and go to state 205
    CONSTANT_STRING  shift, and go to state 206


State 184

   19 predefined_functions: KW_writeInt '(' . calc ')' ';'
   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 207


State 185

   20 predefined_functions: KW_writeReal '(' . calc ')' ';'
   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 208


State 186

   12 predefined_functions: IDENTIFIER ASSIGN . KW_readString '(' ')' ';'
   13                     | IDENTIFIER ASSIGN . KW_readInt '(' ')' ';'
   15                     | IDENTIFIER ASSIGN . KW_readReal '(' ')' ';'
   32 code: IDENTIFIER ASSIGN . IDENTIFIER '(' call_func_var ')' ';'
   42 calculation: IDENTIFIER ASSIGN . calc ';'
   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    KW_readString      shift, and go to state 209
    KW_readInt         shift, and go to state 210
    KW_readReal        shift, and go to state 211
    IDENTIFIER         shift, and go to state 212
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 213


State 187

   31 code: IDENTIFIER '(' . call_func_var ')' ';'
   37 call_func_var: . %empty  [')', ',']
   38              | . calc
   39              | . call_func_var ',' calc
   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    $default  reduce using rule 37 (call_func_var)

    call_func_var  go to state 214
    calc           go to state 215


State 188

   14 predefined_functions: IDENTIFIER '[' . calc ']' ASSIGN KW_readInt '(' ')' ';'
   16                     | IDENTIFIER '[' . calc ']' ASSIGN KW_readReal '(' ')' ';'
   43 calculation: IDENTIFIER '[' . INTERGER_CONSTANT ']' ASSIGN calc ';'
   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 216
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 217


State 189

    1 program: decl_list KW_FUNC KW_BEGIN '(' ')' '{' body '}' ';' .

    $default  reduce using rule 1 (program)


State 190

   93 single_function: KW_FUNC IDENTIFIER '(' var_func_decl ')' func_type '{' body return_action '}' . ';'

    ';'  shift, and go to state 218


State 191

   74 expr: KW_TRUE .

    $default  reduce using rule 74 (expr)


State 192

   75 expr: KW_FALSE .

    $default  reduce using rule 75 (expr)


State 193

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   82     | KW_NOT . expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 219


State 194

   69 expr: IDENTIFIER .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';']
   92     | IDENTIFIER . '(' call_func_var ')'

    '('  shift, and go to state 220

    $default  reduce using rule 69 (expr)


State 195

   71 expr: INTERGER_CONSTANT .

    $default  reduce using rule 71 (expr)


State 196

   72 expr: FLOATING_POINT .

    $default  reduce using rule 72 (expr)


State 197

   73 expr: CONSTANT_STRING .

    $default  reduce using rule 73 (expr)


State 198

   70 expr: '-' . IDENTIFIER

    IDENTIFIER  shift, and go to state 221


State 199

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   91     | '(' . expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 222


State 200

   23 code: KW_IF '(' expr . ')' execution_body ';'
   24     | KW_IF '(' expr . ')' execution_body KW_ELSE '{' body '}' ';'
   25     | KW_IF '(' expr . ')' execution_body eleif KW_ELSE '{' body '}' ';'
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236
    ')'           shift, and go to state 237


State 201

   42 calculation: IDENTIFIER . ASSIGN calc ';'
   43            | IDENTIFIER . '[' INTERGER_CONSTANT ']' ASSIGN calc ';'

    ASSIGN  shift, and go to state 238
    '['     shift, and go to state 239


State 202

   26 code: KW_FOR '(' calculation . expr ';' calculation_not_semicolon ')' execution_body
   27     | KW_FOR '(' calculation . calculation_not_semicolon ')' execution_body
   44 calculation_not_semicolon: . IDENTIFIER ASSIGN calc
   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 240
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    calculation_not_semicolon  go to state 241
    expr                       go to state 242


State 203

   28 code: KW_WHILE '(' expr . ')' execution_body ';'
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236
    ')'           shift, and go to state 243


State 204

  107 return_action: KW_RETURN calc ';' .

    $default  reduce using rule 107 (return_action)


State 205

   17 predefined_functions: KW_writeString '(' IDENTIFIER . ')' ';'

    ')'  shift, and go to state 244


State 206

   18 predefined_functions: KW_writeString '(' CONSTANT_STRING . ')' ';'

    ')'  shift, and go to state 245


State 207

   19 predefined_functions: KW_writeInt '(' calc . ')' ';'
   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106
    ')'           shift, and go to state 246


State 208

   20 predefined_functions: KW_writeReal '(' calc . ')' ';'
   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106
    ')'           shift, and go to state 247


State 209

   12 predefined_functions: IDENTIFIER ASSIGN KW_readString . '(' ')' ';'

    '('  shift, and go to state 248


State 210

   13 predefined_functions: IDENTIFIER ASSIGN KW_readInt . '(' ')' ';'

    '('  shift, and go to state 249


State 211

   15 predefined_functions: IDENTIFIER ASSIGN KW_readReal . '(' ')' ';'

    '('  shift, and go to state 250


State 212

   32 code: IDENTIFIER ASSIGN IDENTIFIER . '(' call_func_var ')' ';'
   45 calc: IDENTIFIER .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ';']
   47     | IDENTIFIER . '[' INTERGER_CONSTANT ']'

    '('  shift, and go to state 251
    '['  shift, and go to state 90

    $default  reduce using rule 45 (calc)


State 213

   42 calculation: IDENTIFIER ASSIGN calc . ';'
   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106
    ';'           shift, and go to state 252


State 214

   31 code: IDENTIFIER '(' call_func_var . ')' ';'
   39 call_func_var: call_func_var . ',' calc

    ')'  shift, and go to state 253
    ','  shift, and go to state 254


State 215

   38 call_func_var: calc .  [')', ',']
   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    $default  reduce using rule 38 (call_func_var)


State 216

   43 calculation: IDENTIFIER '[' INTERGER_CONSTANT . ']' ASSIGN calc ';'
   48 calc: INTERGER_CONSTANT .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ']']

    ']'  shift, and go to state 255

    ']'       [reduce using rule 48 (calc)]
    $default  reduce using rule 48 (calc)


State 217

   14 predefined_functions: IDENTIFIER '[' calc . ']' ASSIGN KW_readInt '(' ')' ';'
   16                     | IDENTIFIER '[' calc . ']' ASSIGN KW_readReal '(' ')' ';'
   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106
    ']'           shift, and go to state 256


State 218

   93 single_function: KW_FUNC IDENTIFIER '(' var_func_decl ')' func_type '{' body return_action '}' ';' .

    $default  reduce using rule 93 (single_function)


State 219

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   82     | KW_NOT expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';']
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 82 (expr)]
    NOTEQUAL      [reduce using rule 82 (expr)]
    SMALLER       [reduce using rule 82 (expr)]
    SMALLEREQUAL  [reduce using rule 82 (expr)]
    BIGGER        [reduce using rule 82 (expr)]
    BIGGEREQUAL   [reduce using rule 82 (expr)]
    KW_AND        [reduce using rule 82 (expr)]
    KW_OR         [reduce using rule 82 (expr)]
    '-'           [reduce using rule 82 (expr)]
    '+'           [reduce using rule 82 (expr)]
    '*'           [reduce using rule 82 (expr)]
    '/'           [reduce using rule 82 (expr)]
    '%'           [reduce using rule 82 (expr)]
    STARSTAR      [reduce using rule 82 (expr)]
    $default      reduce using rule 82 (expr)


State 220

   37 call_func_var: . %empty  [')', ',']
   38              | . calc
   39              | . call_func_var ',' calc
   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc
   92 expr: IDENTIFIER '(' . call_func_var ')'

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    $default  reduce using rule 37 (call_func_var)

    call_func_var  go to state 257
    calc           go to state 215


State 221

   70 expr: '-' IDENTIFIER .

    $default  reduce using rule 70 (expr)


State 222

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr
   91     | '(' expr . ')'

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236
    ')'           shift, and go to state 258


State 223

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   85     | expr ASSIGNASSIGN . expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 259


State 224

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   86     | expr NOTEQUAL . expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 260


State 225

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   87     | expr SMALLER . expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 261


State 226

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   88     | expr SMALLEREQUAL . expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 262


State 227

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   89     | expr BIGGER . expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 263


State 228

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   90     | expr BIGGEREQUAL . expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 264


State 229

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   83     | expr KW_AND . expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 265


State 230

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   84     | expr KW_OR . expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 266


State 231

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   77     | expr '-' . expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 267


State 232

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   76     | expr '+' . expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 268


State 233

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   79     | expr '*' . expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 269


State 234

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   80     | expr '/' . expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 270


State 235

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   81     | expr '%' . expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 271


State 236

   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   78     | expr STARSTAR . expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 272


State 237

   12 predefined_functions: . IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | . IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | . IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | . KW_writeString '(' IDENTIFIER ')' ';'
   18                     | . KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | . KW_writeInt '(' calc ')' ';'
   20                     | . KW_writeReal '(' calc ')' ';'
   21 code: . predefined_functions
   22     | . calculation
   23     | . KW_IF '(' expr ')' execution_body ';'
   23     | KW_IF '(' expr ')' . execution_body ';'
   24     | . KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   24     | KW_IF '(' expr ')' . execution_body KW_ELSE '{' body '}' ';'
   25     | . KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   25     | KW_IF '(' expr ')' . execution_body eleif KW_ELSE '{' body '}' ';'
   26     | . KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | . KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   28     | . KW_WHILE '(' expr ')' execution_body ';'
   29     | . KW_BREAK ';'
   30     | . KW_CONTINUE ';'
   31     | . IDENTIFIER '(' call_func_var ')' ';'
   32     | . IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | . var_decl
   34     | . return_action
   40 execution_body: . code
   41               | . '{' body '}'
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'
  106 return_action: . KW_RETURN ';'
  107              | . KW_RETURN calc ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR          shift, and go to state 1
    KW_IF           shift, and go to state 159
    KW_FOR          shift, and go to state 160
    KW_WHILE        shift, and go to state 161
    KW_BREAK        shift, and go to state 162
    KW_CONTINUE     shift, and go to state 163
    KW_RETURN       shift, and go to state 164
    KW_writeString  shift, and go to state 165
    KW_writeInt     shift, and go to state 166
    KW_writeReal    shift, and go to state 167
    IDENTIFIER      shift, and go to state 168
    '{'             shift, and go to state 273

    predefined_functions  go to state 170
    code                  go to state 274
    execution_body        go to state 275
    calculation           go to state 172
    return_action         go to state 173
    var_decl              go to state 174
    single_var_decl       go to state 8


State 238

   42 calculation: IDENTIFIER ASSIGN . calc ';'
   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 213


State 239

   43 calculation: IDENTIFIER '[' . INTERGER_CONSTANT ']' ASSIGN calc ';'

    INTERGER_CONSTANT  shift, and go to state 276


State 240

   44 calculation_not_semicolon: IDENTIFIER . ASSIGN calc
   69 expr: IDENTIFIER .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ';']
   92     | IDENTIFIER . '(' call_func_var ')'

    ASSIGN  shift, and go to state 32
    '('     shift, and go to state 220

    $default  reduce using rule 69 (expr)


State 241

   27 code: KW_FOR '(' calculation calculation_not_semicolon . ')' execution_body

    ')'  shift, and go to state 277


State 242

   26 code: KW_FOR '(' calculation expr . ';' calculation_not_semicolon ')' execution_body
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236
    ';'           shift, and go to state 278


State 243

   12 predefined_functions: . IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | . IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | . IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | . KW_writeString '(' IDENTIFIER ')' ';'
   18                     | . KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | . KW_writeInt '(' calc ')' ';'
   20                     | . KW_writeReal '(' calc ')' ';'
   21 code: . predefined_functions
   22     | . calculation
   23     | . KW_IF '(' expr ')' execution_body ';'
   24     | . KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | . KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   26     | . KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | . KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   28     | . KW_WHILE '(' expr ')' execution_body ';'
   28     | KW_WHILE '(' expr ')' . execution_body ';'
   29     | . KW_BREAK ';'
   30     | . KW_CONTINUE ';'
   31     | . IDENTIFIER '(' call_func_var ')' ';'
   32     | . IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | . var_decl
   34     | . return_action
   40 execution_body: . code
   41               | . '{' body '}'
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'
  106 return_action: . KW_RETURN ';'
  107              | . KW_RETURN calc ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR          shift, and go to state 1
    KW_IF           shift, and go to state 159
    KW_FOR          shift, and go to state 160
    KW_WHILE        shift, and go to state 161
    KW_BREAK        shift, and go to state 162
    KW_CONTINUE     shift, and go to state 163
    KW_RETURN       shift, and go to state 164
    KW_writeString  shift, and go to state 165
    KW_writeInt     shift, and go to state 166
    KW_writeReal    shift, and go to state 167
    IDENTIFIER      shift, and go to state 168
    '{'             shift, and go to state 273

    predefined_functions  go to state 170
    code                  go to state 274
    execution_body        go to state 279
    calculation           go to state 172
    return_action         go to state 173
    var_decl              go to state 174
    single_var_decl       go to state 8


State 244

   17 predefined_functions: KW_writeString '(' IDENTIFIER ')' . ';'

    ';'  shift, and go to state 280


State 245

   18 predefined_functions: KW_writeString '(' CONSTANT_STRING ')' . ';'

    ';'  shift, and go to state 281


State 246

   19 predefined_functions: KW_writeInt '(' calc ')' . ';'

    ';'  shift, and go to state 282


State 247

   20 predefined_functions: KW_writeReal '(' calc ')' . ';'

    ';'  shift, and go to state 283


State 248

   12 predefined_functions: IDENTIFIER ASSIGN KW_readString '(' . ')' ';'

    ')'  shift, and go to state 284


State 249

   13 predefined_functions: IDENTIFIER ASSIGN KW_readInt '(' . ')' ';'

    ')'  shift, and go to state 285


State 250

   15 predefined_functions: IDENTIFIER ASSIGN KW_readReal '(' . ')' ';'

    ')'  shift, and go to state 286


State 251

   32 code: IDENTIFIER ASSIGN IDENTIFIER '(' . call_func_var ')' ';'
   37 call_func_var: . %empty  [')', ',']
   38              | . calc
   39              | . call_func_var ',' calc
   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    $default  reduce using rule 37 (call_func_var)

    call_func_var  go to state 287
    calc           go to state 215


State 252

   42 calculation: IDENTIFIER ASSIGN calc ';' .

    $default  reduce using rule 42 (calculation)


State 253

   31 code: IDENTIFIER '(' call_func_var ')' . ';'

    ';'  shift, and go to state 288


State 254

   39 call_func_var: call_func_var ',' . calc
   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 289


State 255

   43 calculation: IDENTIFIER '[' INTERGER_CONSTANT ']' . ASSIGN calc ';'

    ASSIGN  shift, and go to state 290


State 256

   14 predefined_functions: IDENTIFIER '[' calc ']' . ASSIGN KW_readInt '(' ')' ';'
   16                     | IDENTIFIER '[' calc ']' . ASSIGN KW_readReal '(' ')' ';'

    ASSIGN  shift, and go to state 291


State 257

   39 call_func_var: call_func_var . ',' calc
   92 expr: IDENTIFIER '(' call_func_var . ')'

    ')'  shift, and go to state 292
    ','  shift, and go to state 254


State 258

   91 expr: '(' expr ')' .

    $default  reduce using rule 91 (expr)


State 259

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   85     | expr ASSIGNASSIGN expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';']
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 85 (expr)]
    NOTEQUAL      [reduce using rule 85 (expr)]
    SMALLER       [reduce using rule 85 (expr)]
    SMALLEREQUAL  [reduce using rule 85 (expr)]
    BIGGER        [reduce using rule 85 (expr)]
    BIGGEREQUAL   [reduce using rule 85 (expr)]
    KW_AND        [reduce using rule 85 (expr)]
    KW_OR         [reduce using rule 85 (expr)]
    '-'           [reduce using rule 85 (expr)]
    '+'           [reduce using rule 85 (expr)]
    '*'           [reduce using rule 85 (expr)]
    '/'           [reduce using rule 85 (expr)]
    '%'           [reduce using rule 85 (expr)]
    STARSTAR      [reduce using rule 85 (expr)]
    $default      reduce using rule 85 (expr)


State 260

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   86     | expr NOTEQUAL expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';']
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 86 (expr)]
    NOTEQUAL      [reduce using rule 86 (expr)]
    SMALLER       [reduce using rule 86 (expr)]
    SMALLEREQUAL  [reduce using rule 86 (expr)]
    BIGGER        [reduce using rule 86 (expr)]
    BIGGEREQUAL   [reduce using rule 86 (expr)]
    KW_AND        [reduce using rule 86 (expr)]
    KW_OR         [reduce using rule 86 (expr)]
    '-'           [reduce using rule 86 (expr)]
    '+'           [reduce using rule 86 (expr)]
    '*'           [reduce using rule 86 (expr)]
    '/'           [reduce using rule 86 (expr)]
    '%'           [reduce using rule 86 (expr)]
    STARSTAR      [reduce using rule 86 (expr)]
    $default      reduce using rule 86 (expr)


State 261

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   87     | expr SMALLER expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';']
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 87 (expr)]
    NOTEQUAL      [reduce using rule 87 (expr)]
    SMALLER       [reduce using rule 87 (expr)]
    SMALLEREQUAL  [reduce using rule 87 (expr)]
    BIGGER        [reduce using rule 87 (expr)]
    BIGGEREQUAL   [reduce using rule 87 (expr)]
    KW_AND        [reduce using rule 87 (expr)]
    KW_OR         [reduce using rule 87 (expr)]
    '-'           [reduce using rule 87 (expr)]
    '+'           [reduce using rule 87 (expr)]
    '*'           [reduce using rule 87 (expr)]
    '/'           [reduce using rule 87 (expr)]
    '%'           [reduce using rule 87 (expr)]
    STARSTAR      [reduce using rule 87 (expr)]
    $default      reduce using rule 87 (expr)


State 262

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   88     | expr SMALLEREQUAL expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';']
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 88 (expr)]
    NOTEQUAL      [reduce using rule 88 (expr)]
    SMALLER       [reduce using rule 88 (expr)]
    SMALLEREQUAL  [reduce using rule 88 (expr)]
    BIGGER        [reduce using rule 88 (expr)]
    BIGGEREQUAL   [reduce using rule 88 (expr)]
    KW_AND        [reduce using rule 88 (expr)]
    KW_OR         [reduce using rule 88 (expr)]
    '-'           [reduce using rule 88 (expr)]
    '+'           [reduce using rule 88 (expr)]
    '*'           [reduce using rule 88 (expr)]
    '/'           [reduce using rule 88 (expr)]
    '%'           [reduce using rule 88 (expr)]
    STARSTAR      [reduce using rule 88 (expr)]
    $default      reduce using rule 88 (expr)


State 263

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   89     | expr BIGGER expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';']
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 89 (expr)]
    NOTEQUAL      [reduce using rule 89 (expr)]
    SMALLER       [reduce using rule 89 (expr)]
    SMALLEREQUAL  [reduce using rule 89 (expr)]
    BIGGER        [reduce using rule 89 (expr)]
    BIGGEREQUAL   [reduce using rule 89 (expr)]
    KW_AND        [reduce using rule 89 (expr)]
    KW_OR         [reduce using rule 89 (expr)]
    '-'           [reduce using rule 89 (expr)]
    '+'           [reduce using rule 89 (expr)]
    '*'           [reduce using rule 89 (expr)]
    '/'           [reduce using rule 89 (expr)]
    '%'           [reduce using rule 89 (expr)]
    STARSTAR      [reduce using rule 89 (expr)]
    $default      reduce using rule 89 (expr)


State 264

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr
   90     | expr BIGGEREQUAL expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';']

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 90 (expr)]
    NOTEQUAL      [reduce using rule 90 (expr)]
    SMALLER       [reduce using rule 90 (expr)]
    SMALLEREQUAL  [reduce using rule 90 (expr)]
    BIGGER        [reduce using rule 90 (expr)]
    BIGGEREQUAL   [reduce using rule 90 (expr)]
    KW_AND        [reduce using rule 90 (expr)]
    KW_OR         [reduce using rule 90 (expr)]
    '-'           [reduce using rule 90 (expr)]
    '+'           [reduce using rule 90 (expr)]
    '*'           [reduce using rule 90 (expr)]
    '/'           [reduce using rule 90 (expr)]
    '%'           [reduce using rule 90 (expr)]
    STARSTAR      [reduce using rule 90 (expr)]
    $default      reduce using rule 90 (expr)


State 265

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   83     | expr KW_AND expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';']
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 83 (expr)]
    NOTEQUAL      [reduce using rule 83 (expr)]
    SMALLER       [reduce using rule 83 (expr)]
    SMALLEREQUAL  [reduce using rule 83 (expr)]
    BIGGER        [reduce using rule 83 (expr)]
    BIGGEREQUAL   [reduce using rule 83 (expr)]
    KW_AND        [reduce using rule 83 (expr)]
    KW_OR         [reduce using rule 83 (expr)]
    '-'           [reduce using rule 83 (expr)]
    '+'           [reduce using rule 83 (expr)]
    '*'           [reduce using rule 83 (expr)]
    '/'           [reduce using rule 83 (expr)]
    '%'           [reduce using rule 83 (expr)]
    STARSTAR      [reduce using rule 83 (expr)]
    $default      reduce using rule 83 (expr)


State 266

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   84     | expr KW_OR expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';']
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 84 (expr)]
    NOTEQUAL      [reduce using rule 84 (expr)]
    SMALLER       [reduce using rule 84 (expr)]
    SMALLEREQUAL  [reduce using rule 84 (expr)]
    BIGGER        [reduce using rule 84 (expr)]
    BIGGEREQUAL   [reduce using rule 84 (expr)]
    KW_AND        [reduce using rule 84 (expr)]
    KW_OR         [reduce using rule 84 (expr)]
    '-'           [reduce using rule 84 (expr)]
    '+'           [reduce using rule 84 (expr)]
    '*'           [reduce using rule 84 (expr)]
    '/'           [reduce using rule 84 (expr)]
    '%'           [reduce using rule 84 (expr)]
    STARSTAR      [reduce using rule 84 (expr)]
    $default      reduce using rule 84 (expr)


State 267

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   77     | expr '-' expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', ')', ';']
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 77 (expr)]
    NOTEQUAL      [reduce using rule 77 (expr)]
    SMALLER       [reduce using rule 77 (expr)]
    SMALLEREQUAL  [reduce using rule 77 (expr)]
    BIGGER        [reduce using rule 77 (expr)]
    BIGGEREQUAL   [reduce using rule 77 (expr)]
    KW_AND        [reduce using rule 77 (expr)]
    KW_OR         [reduce using rule 77 (expr)]
    $default      reduce using rule 77 (expr)

    Conflict between rule 77 and token '-' resolved as reduce (%left '-').
    Conflict between rule 77 and token '+' resolved as reduce (%left '+').
    Conflict between rule 77 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 77 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 77 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 77 and token STARSTAR resolved as shift ('-' < STARSTAR).


State 268

   76 expr: expr . '+' expr
   76     | expr '+' expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', ')', ';']
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 76 (expr)]
    NOTEQUAL      [reduce using rule 76 (expr)]
    SMALLER       [reduce using rule 76 (expr)]
    SMALLEREQUAL  [reduce using rule 76 (expr)]
    BIGGER        [reduce using rule 76 (expr)]
    BIGGEREQUAL   [reduce using rule 76 (expr)]
    KW_AND        [reduce using rule 76 (expr)]
    KW_OR         [reduce using rule 76 (expr)]
    $default      reduce using rule 76 (expr)

    Conflict between rule 76 and token '-' resolved as reduce (%left '-').
    Conflict between rule 76 and token '+' resolved as reduce (%left '+').
    Conflict between rule 76 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 76 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 76 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 76 and token STARSTAR resolved as shift ('+' < STARSTAR).


State 269

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   79     | expr '*' expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', ')', ';']
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 79 (expr)]
    NOTEQUAL      [reduce using rule 79 (expr)]
    SMALLER       [reduce using rule 79 (expr)]
    SMALLEREQUAL  [reduce using rule 79 (expr)]
    BIGGER        [reduce using rule 79 (expr)]
    BIGGEREQUAL   [reduce using rule 79 (expr)]
    KW_AND        [reduce using rule 79 (expr)]
    KW_OR         [reduce using rule 79 (expr)]
    $default      reduce using rule 79 (expr)

    Conflict between rule 79 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 79 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 79 and token '*' resolved as reduce (%left '*').
    Conflict between rule 79 and token '/' resolved as reduce (%left '/').
    Conflict between rule 79 and token '%' resolved as reduce (%left '%').
    Conflict between rule 79 and token STARSTAR resolved as shift ('*' < STARSTAR).


State 270

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   80     | expr '/' expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', ')', ';']
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 80 (expr)]
    NOTEQUAL      [reduce using rule 80 (expr)]
    SMALLER       [reduce using rule 80 (expr)]
    SMALLEREQUAL  [reduce using rule 80 (expr)]
    BIGGER        [reduce using rule 80 (expr)]
    BIGGEREQUAL   [reduce using rule 80 (expr)]
    KW_AND        [reduce using rule 80 (expr)]
    KW_OR         [reduce using rule 80 (expr)]
    $default      reduce using rule 80 (expr)

    Conflict between rule 80 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 80 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 80 and token '*' resolved as reduce (%left '*').
    Conflict between rule 80 and token '/' resolved as reduce (%left '/').
    Conflict between rule 80 and token '%' resolved as reduce (%left '%').
    Conflict between rule 80 and token STARSTAR resolved as shift ('/' < STARSTAR).


State 271

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   81     | expr '%' expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', ')', ';']
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    STARSTAR      shift, and go to state 236

    ASSIGNASSIGN  [reduce using rule 81 (expr)]
    NOTEQUAL      [reduce using rule 81 (expr)]
    SMALLER       [reduce using rule 81 (expr)]
    SMALLEREQUAL  [reduce using rule 81 (expr)]
    BIGGER        [reduce using rule 81 (expr)]
    BIGGEREQUAL   [reduce using rule 81 (expr)]
    KW_AND        [reduce using rule 81 (expr)]
    KW_OR         [reduce using rule 81 (expr)]
    $default      reduce using rule 81 (expr)

    Conflict between rule 81 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 81 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 81 and token '*' resolved as reduce (%left '*').
    Conflict between rule 81 and token '/' resolved as reduce (%left '/').
    Conflict between rule 81 and token '%' resolved as reduce (%left '%').
    Conflict between rule 81 and token STARSTAR resolved as shift ('%' < STARSTAR).


State 272

   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   78     | expr STARSTAR expr .  [ASSIGNASSIGN, NOTEQUAL, SMALLER, SMALLEREQUAL, BIGGER, BIGGEREQUAL, KW_AND, KW_OR, '-', '+', '*', '/', '%', STARSTAR, ')', ';']
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230

    ASSIGNASSIGN  [reduce using rule 78 (expr)]
    NOTEQUAL      [reduce using rule 78 (expr)]
    SMALLER       [reduce using rule 78 (expr)]
    SMALLEREQUAL  [reduce using rule 78 (expr)]
    BIGGER        [reduce using rule 78 (expr)]
    BIGGEREQUAL   [reduce using rule 78 (expr)]
    KW_AND        [reduce using rule 78 (expr)]
    KW_OR         [reduce using rule 78 (expr)]
    $default      reduce using rule 78 (expr)

    Conflict between rule 78 and token '-' resolved as reduce ('-' < STARSTAR).
    Conflict between rule 78 and token '+' resolved as reduce ('+' < STARSTAR).
    Conflict between rule 78 and token '*' resolved as reduce ('*' < STARSTAR).
    Conflict between rule 78 and token '/' resolved as reduce ('/' < STARSTAR).
    Conflict between rule 78 and token '%' resolved as reduce ('%' < STARSTAR).
    Conflict between rule 78 and token STARSTAR resolved as reduce (%left STARSTAR).


State 273

   10 body: . %empty
   11     | . body code
   41 execution_body: '{' . body '}'

    $default  reduce using rule 10 (body)

    body  go to state 293


State 274

   40 execution_body: code .

    $default  reduce using rule 40 (execution_body)


State 275

   23 code: KW_IF '(' expr ')' execution_body . ';'
   24     | KW_IF '(' expr ')' execution_body . KW_ELSE '{' body '}' ';'
   25     | KW_IF '(' expr ')' execution_body . eleif KW_ELSE '{' body '}' ';'
   35 eleif: . KW_ELSE_IF '(' expr ')' execution_body
   36      | . eleif KW_ELSE_IF '(' expr ')' execution_body

    KW_ELSE     shift, and go to state 294
    KW_ELSE_IF  shift, and go to state 295
    ';'         shift, and go to state 296

    eleif  go to state 297


State 276

   43 calculation: IDENTIFIER '[' INTERGER_CONSTANT . ']' ASSIGN calc ';'

    ']'  shift, and go to state 255


State 277

   12 predefined_functions: . IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | . IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | . IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | . KW_writeString '(' IDENTIFIER ')' ';'
   18                     | . KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | . KW_writeInt '(' calc ')' ';'
   20                     | . KW_writeReal '(' calc ')' ';'
   21 code: . predefined_functions
   22     | . calculation
   23     | . KW_IF '(' expr ')' execution_body ';'
   24     | . KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | . KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   26     | . KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | . KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   27     | KW_FOR '(' calculation calculation_not_semicolon ')' . execution_body
   28     | . KW_WHILE '(' expr ')' execution_body ';'
   29     | . KW_BREAK ';'
   30     | . KW_CONTINUE ';'
   31     | . IDENTIFIER '(' call_func_var ')' ';'
   32     | . IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | . var_decl
   34     | . return_action
   40 execution_body: . code
   41               | . '{' body '}'
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'
  106 return_action: . KW_RETURN ';'
  107              | . KW_RETURN calc ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR          shift, and go to state 1
    KW_IF           shift, and go to state 159
    KW_FOR          shift, and go to state 160
    KW_WHILE        shift, and go to state 161
    KW_BREAK        shift, and go to state 162
    KW_CONTINUE     shift, and go to state 163
    KW_RETURN       shift, and go to state 164
    KW_writeString  shift, and go to state 165
    KW_writeInt     shift, and go to state 166
    KW_writeReal    shift, and go to state 167
    IDENTIFIER      shift, and go to state 168
    '{'             shift, and go to state 273

    predefined_functions  go to state 170
    code                  go to state 274
    execution_body        go to state 298
    calculation           go to state 172
    return_action         go to state 173
    var_decl              go to state 174
    single_var_decl       go to state 8


State 278

   26 code: KW_FOR '(' calculation expr ';' . calculation_not_semicolon ')' execution_body
   44 calculation_not_semicolon: . IDENTIFIER ASSIGN calc

    IDENTIFIER  shift, and go to state 299

    calculation_not_semicolon  go to state 300


State 279

   28 code: KW_WHILE '(' expr ')' execution_body . ';'

    ';'  shift, and go to state 301


State 280

   17 predefined_functions: KW_writeString '(' IDENTIFIER ')' ';' .

    $default  reduce using rule 17 (predefined_functions)


State 281

   18 predefined_functions: KW_writeString '(' CONSTANT_STRING ')' ';' .

    $default  reduce using rule 18 (predefined_functions)


State 282

   19 predefined_functions: KW_writeInt '(' calc ')' ';' .

    $default  reduce using rule 19 (predefined_functions)


State 283

   20 predefined_functions: KW_writeReal '(' calc ')' ';' .

    $default  reduce using rule 20 (predefined_functions)


State 284

   12 predefined_functions: IDENTIFIER ASSIGN KW_readString '(' ')' . ';'

    ';'  shift, and go to state 302


State 285

   13 predefined_functions: IDENTIFIER ASSIGN KW_readInt '(' ')' . ';'

    ';'  shift, and go to state 303


State 286

   15 predefined_functions: IDENTIFIER ASSIGN KW_readReal '(' ')' . ';'

    ';'  shift, and go to state 304


State 287

   32 code: IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var . ')' ';'
   39 call_func_var: call_func_var . ',' calc

    ')'  shift, and go to state 305
    ','  shift, and go to state 254


State 288

   31 code: IDENTIFIER '(' call_func_var ')' ';' .

    $default  reduce using rule 31 (code)


State 289

   39 call_func_var: call_func_var ',' calc .  [')', ',']
   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106

    $default  reduce using rule 39 (call_func_var)


State 290

   43 calculation: IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN . calc ';'
   45 calc: . IDENTIFIER
   46     | . '-' IDENTIFIER
   47     | . IDENTIFIER '[' INTERGER_CONSTANT ']'
   48     | . INTERGER_CONSTANT
   49     | . FLOATING_POINT
   50     | . CONSTANT_STRING
   51     | . KW_TRUE
   52     | . KW_FALSE
   53     | . KW_NOT calc
   54     | . calc '+' calc
   55     | . calc '-' calc
   56     | . calc STARSTAR calc
   57     | . calc '*' calc
   58     | . calc '/' calc
   59     | . calc '%' calc
   60     | . calc KW_AND calc
   61     | . calc KW_OR calc
   62     | . '(' calc ')'
   63     | . calc ASSIGNASSIGN calc
   64     | . calc NOTEQUAL calc
   65     | . calc SMALLER calc
   66     | . calc SMALLEREQUAL calc
   67     | . calc BIGGER calc
   68     | . calc BIGGEREQUAL calc

    KW_TRUE            shift, and go to state 51
    KW_FALSE           shift, and go to state 52
    KW_NOT             shift, and go to state 53
    IDENTIFIER         shift, and go to state 54
    INTERGER_CONSTANT  shift, and go to state 55
    FLOATING_POINT     shift, and go to state 56
    CONSTANT_STRING    shift, and go to state 57
    '-'                shift, and go to state 58
    '('                shift, and go to state 59

    calc  go to state 306


State 291

   14 predefined_functions: IDENTIFIER '[' calc ']' ASSIGN . KW_readInt '(' ')' ';'
   16                     | IDENTIFIER '[' calc ']' ASSIGN . KW_readReal '(' ')' ';'

    KW_readInt   shift, and go to state 307
    KW_readReal  shift, and go to state 308


State 292

   92 expr: IDENTIFIER '(' call_func_var ')' .

    $default  reduce using rule 92 (expr)


State 293

   11 body: body . code
   12 predefined_functions: . IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | . IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | . IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | . KW_writeString '(' IDENTIFIER ')' ';'
   18                     | . KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | . KW_writeInt '(' calc ')' ';'
   20                     | . KW_writeReal '(' calc ')' ';'
   21 code: . predefined_functions
   22     | . calculation
   23     | . KW_IF '(' expr ')' execution_body ';'
   24     | . KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | . KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   26     | . KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | . KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   28     | . KW_WHILE '(' expr ')' execution_body ';'
   29     | . KW_BREAK ';'
   30     | . KW_CONTINUE ';'
   31     | . IDENTIFIER '(' call_func_var ')' ';'
   32     | . IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | . var_decl
   34     | . return_action
   41 execution_body: '{' body . '}'
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'
  106 return_action: . KW_RETURN ';'
  107              | . KW_RETURN calc ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR          shift, and go to state 1
    KW_IF           shift, and go to state 159
    KW_FOR          shift, and go to state 160
    KW_WHILE        shift, and go to state 161
    KW_BREAK        shift, and go to state 162
    KW_CONTINUE     shift, and go to state 163
    KW_RETURN       shift, and go to state 164
    KW_writeString  shift, and go to state 165
    KW_writeInt     shift, and go to state 166
    KW_writeReal    shift, and go to state 167
    IDENTIFIER      shift, and go to state 168
    '}'             shift, and go to state 309

    predefined_functions  go to state 170
    code                  go to state 171
    calculation           go to state 172
    return_action         go to state 173
    var_decl              go to state 174
    single_var_decl       go to state 8


State 294

   24 code: KW_IF '(' expr ')' execution_body KW_ELSE . '{' body '}' ';'

    '{'  shift, and go to state 310


State 295

   35 eleif: KW_ELSE_IF . '(' expr ')' execution_body

    '('  shift, and go to state 311


State 296

   23 code: KW_IF '(' expr ')' execution_body ';' .

    $default  reduce using rule 23 (code)


State 297

   25 code: KW_IF '(' expr ')' execution_body eleif . KW_ELSE '{' body '}' ';'
   36 eleif: eleif . KW_ELSE_IF '(' expr ')' execution_body

    KW_ELSE     shift, and go to state 312
    KW_ELSE_IF  shift, and go to state 313


State 298

   27 code: KW_FOR '(' calculation calculation_not_semicolon ')' execution_body .

    $default  reduce using rule 27 (code)


State 299

   44 calculation_not_semicolon: IDENTIFIER . ASSIGN calc

    ASSIGN  shift, and go to state 32


State 300

   26 code: KW_FOR '(' calculation expr ';' calculation_not_semicolon . ')' execution_body

    ')'  shift, and go to state 314


State 301

   28 code: KW_WHILE '(' expr ')' execution_body ';' .

    $default  reduce using rule 28 (code)


State 302

   12 predefined_functions: IDENTIFIER ASSIGN KW_readString '(' ')' ';' .

    $default  reduce using rule 12 (predefined_functions)


State 303

   13 predefined_functions: IDENTIFIER ASSIGN KW_readInt '(' ')' ';' .

    $default  reduce using rule 13 (predefined_functions)


State 304

   15 predefined_functions: IDENTIFIER ASSIGN KW_readReal '(' ')' ';' .

    $default  reduce using rule 15 (predefined_functions)


State 305

   32 code: IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' . ';'

    ';'  shift, and go to state 315


State 306

   43 calculation: IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc . ';'
   54 calc: calc . '+' calc
   55     | calc . '-' calc
   56     | calc . STARSTAR calc
   57     | calc . '*' calc
   58     | calc . '/' calc
   59     | calc . '%' calc
   60     | calc . KW_AND calc
   61     | calc . KW_OR calc
   63     | calc . ASSIGNASSIGN calc
   64     | calc . NOTEQUAL calc
   65     | calc . SMALLER calc
   66     | calc . SMALLEREQUAL calc
   67     | calc . BIGGER calc
   68     | calc . BIGGEREQUAL calc

    ASSIGNASSIGN  shift, and go to state 93
    NOTEQUAL      shift, and go to state 94
    SMALLER       shift, and go to state 95
    SMALLEREQUAL  shift, and go to state 96
    BIGGER        shift, and go to state 97
    BIGGEREQUAL   shift, and go to state 98
    KW_AND        shift, and go to state 99
    KW_OR         shift, and go to state 100
    '-'           shift, and go to state 101
    '+'           shift, and go to state 102
    '*'           shift, and go to state 103
    '/'           shift, and go to state 104
    '%'           shift, and go to state 105
    STARSTAR      shift, and go to state 106
    ';'           shift, and go to state 316


State 307

   14 predefined_functions: IDENTIFIER '[' calc ']' ASSIGN KW_readInt . '(' ')' ';'

    '('  shift, and go to state 317


State 308

   16 predefined_functions: IDENTIFIER '[' calc ']' ASSIGN KW_readReal . '(' ')' ';'

    '('  shift, and go to state 318


State 309

   41 execution_body: '{' body '}' .

    $default  reduce using rule 41 (execution_body)


State 310

   10 body: . %empty
   11     | . body code
   24 code: KW_IF '(' expr ')' execution_body KW_ELSE '{' . body '}' ';'

    $default  reduce using rule 10 (body)

    body  go to state 319


State 311

   35 eleif: KW_ELSE_IF '(' . expr ')' execution_body
   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 320


State 312

   25 code: KW_IF '(' expr ')' execution_body eleif KW_ELSE . '{' body '}' ';'

    '{'  shift, and go to state 321


State 313

   36 eleif: eleif KW_ELSE_IF . '(' expr ')' execution_body

    '('  shift, and go to state 322


State 314

   12 predefined_functions: . IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | . IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | . IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | . KW_writeString '(' IDENTIFIER ')' ';'
   18                     | . KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | . KW_writeInt '(' calc ')' ';'
   20                     | . KW_writeReal '(' calc ')' ';'
   21 code: . predefined_functions
   22     | . calculation
   23     | . KW_IF '(' expr ')' execution_body ';'
   24     | . KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | . KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   26     | . KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   26     | KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' . execution_body
   27     | . KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   28     | . KW_WHILE '(' expr ')' execution_body ';'
   29     | . KW_BREAK ';'
   30     | . KW_CONTINUE ';'
   31     | . IDENTIFIER '(' call_func_var ')' ';'
   32     | . IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | . var_decl
   34     | . return_action
   40 execution_body: . code
   41               | . '{' body '}'
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'
  106 return_action: . KW_RETURN ';'
  107              | . KW_RETURN calc ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR          shift, and go to state 1
    KW_IF           shift, and go to state 159
    KW_FOR          shift, and go to state 160
    KW_WHILE        shift, and go to state 161
    KW_BREAK        shift, and go to state 162
    KW_CONTINUE     shift, and go to state 163
    KW_RETURN       shift, and go to state 164
    KW_writeString  shift, and go to state 165
    KW_writeInt     shift, and go to state 166
    KW_writeReal    shift, and go to state 167
    IDENTIFIER      shift, and go to state 168
    '{'             shift, and go to state 273

    predefined_functions  go to state 170
    code                  go to state 274
    execution_body        go to state 323
    calculation           go to state 172
    return_action         go to state 173
    var_decl              go to state 174
    single_var_decl       go to state 8


State 315

   32 code: IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';' .

    $default  reduce using rule 32 (code)


State 316

   43 calculation: IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';' .

    $default  reduce using rule 43 (calculation)


State 317

   14 predefined_functions: IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' . ')' ';'

    ')'  shift, and go to state 324


State 318

   16 predefined_functions: IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' . ')' ';'

    ')'  shift, and go to state 325


State 319

   11 body: body . code
   12 predefined_functions: . IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | . IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | . IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | . KW_writeString '(' IDENTIFIER ')' ';'
   18                     | . KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | . KW_writeInt '(' calc ')' ';'
   20                     | . KW_writeReal '(' calc ')' ';'
   21 code: . predefined_functions
   22     | . calculation
   23     | . KW_IF '(' expr ')' execution_body ';'
   24     | . KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   24     | KW_IF '(' expr ')' execution_body KW_ELSE '{' body . '}' ';'
   25     | . KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   26     | . KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | . KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   28     | . KW_WHILE '(' expr ')' execution_body ';'
   29     | . KW_BREAK ';'
   30     | . KW_CONTINUE ';'
   31     | . IDENTIFIER '(' call_func_var ')' ';'
   32     | . IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | . var_decl
   34     | . return_action
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'
  106 return_action: . KW_RETURN ';'
  107              | . KW_RETURN calc ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR          shift, and go to state 1
    KW_IF           shift, and go to state 159
    KW_FOR          shift, and go to state 160
    KW_WHILE        shift, and go to state 161
    KW_BREAK        shift, and go to state 162
    KW_CONTINUE     shift, and go to state 163
    KW_RETURN       shift, and go to state 164
    KW_writeString  shift, and go to state 165
    KW_writeInt     shift, and go to state 166
    KW_writeReal    shift, and go to state 167
    IDENTIFIER      shift, and go to state 168
    '}'             shift, and go to state 326

    predefined_functions  go to state 170
    code                  go to state 171
    calculation           go to state 172
    return_action         go to state 173
    var_decl              go to state 174
    single_var_decl       go to state 8


State 320

   35 eleif: KW_ELSE_IF '(' expr . ')' execution_body
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236
    ')'           shift, and go to state 327


State 321

   10 body: . %empty
   11     | . body code
   25 code: KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' . body '}' ';'

    $default  reduce using rule 10 (body)

    body  go to state 328


State 322

   36 eleif: eleif KW_ELSE_IF '(' . expr ')' execution_body
   69 expr: . IDENTIFIER
   70     | . '-' IDENTIFIER
   71     | . INTERGER_CONSTANT
   72     | . FLOATING_POINT
   73     | . CONSTANT_STRING
   74     | . KW_TRUE
   75     | . KW_FALSE
   76     | . expr '+' expr
   77     | . expr '-' expr
   78     | . expr STARSTAR expr
   79     | . expr '*' expr
   80     | . expr '/' expr
   81     | . expr '%' expr
   82     | . KW_NOT expr
   83     | . expr KW_AND expr
   84     | . expr KW_OR expr
   85     | . expr ASSIGNASSIGN expr
   86     | . expr NOTEQUAL expr
   87     | . expr SMALLER expr
   88     | . expr SMALLEREQUAL expr
   89     | . expr BIGGER expr
   90     | . expr BIGGEREQUAL expr
   91     | . '(' expr ')'
   92     | . IDENTIFIER '(' call_func_var ')'

    KW_TRUE            shift, and go to state 191
    KW_FALSE           shift, and go to state 192
    KW_NOT             shift, and go to state 193
    IDENTIFIER         shift, and go to state 194
    INTERGER_CONSTANT  shift, and go to state 195
    FLOATING_POINT     shift, and go to state 196
    CONSTANT_STRING    shift, and go to state 197
    '-'                shift, and go to state 198
    '('                shift, and go to state 199

    expr  go to state 329


State 323

   26 code: KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body .

    $default  reduce using rule 26 (code)


State 324

   14 predefined_functions: IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' . ';'

    ';'  shift, and go to state 330


State 325

   16 predefined_functions: IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' . ';'

    ';'  shift, and go to state 331


State 326

   24 code: KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' . ';'

    ';'  shift, and go to state 332


State 327

   12 predefined_functions: . IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | . IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | . IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | . KW_writeString '(' IDENTIFIER ')' ';'
   18                     | . KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | . KW_writeInt '(' calc ')' ';'
   20                     | . KW_writeReal '(' calc ')' ';'
   21 code: . predefined_functions
   22     | . calculation
   23     | . KW_IF '(' expr ')' execution_body ';'
   24     | . KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | . KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   26     | . KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | . KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   28     | . KW_WHILE '(' expr ')' execution_body ';'
   29     | . KW_BREAK ';'
   30     | . KW_CONTINUE ';'
   31     | . IDENTIFIER '(' call_func_var ')' ';'
   32     | . IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | . var_decl
   34     | . return_action
   35 eleif: KW_ELSE_IF '(' expr ')' . execution_body
   40 execution_body: . code
   41               | . '{' body '}'
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'
  106 return_action: . KW_RETURN ';'
  107              | . KW_RETURN calc ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR          shift, and go to state 1
    KW_IF           shift, and go to state 159
    KW_FOR          shift, and go to state 160
    KW_WHILE        shift, and go to state 161
    KW_BREAK        shift, and go to state 162
    KW_CONTINUE     shift, and go to state 163
    KW_RETURN       shift, and go to state 164
    KW_writeString  shift, and go to state 165
    KW_writeInt     shift, and go to state 166
    KW_writeReal    shift, and go to state 167
    IDENTIFIER      shift, and go to state 168
    '{'             shift, and go to state 273

    predefined_functions  go to state 170
    code                  go to state 274
    execution_body        go to state 333
    calculation           go to state 172
    return_action         go to state 173
    var_decl              go to state 174
    single_var_decl       go to state 8


State 328

   11 body: body . code
   12 predefined_functions: . IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | . IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | . IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | . KW_writeString '(' IDENTIFIER ')' ';'
   18                     | . KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | . KW_writeInt '(' calc ')' ';'
   20                     | . KW_writeReal '(' calc ')' ';'
   21 code: . predefined_functions
   22     | . calculation
   23     | . KW_IF '(' expr ')' execution_body ';'
   24     | . KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | . KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   25     | KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body . '}' ';'
   26     | . KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | . KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   28     | . KW_WHILE '(' expr ')' execution_body ';'
   29     | . KW_BREAK ';'
   30     | . KW_CONTINUE ';'
   31     | . IDENTIFIER '(' call_func_var ')' ';'
   32     | . IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | . var_decl
   34     | . return_action
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'
  106 return_action: . KW_RETURN ';'
  107              | . KW_RETURN calc ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR          shift, and go to state 1
    KW_IF           shift, and go to state 159
    KW_FOR          shift, and go to state 160
    KW_WHILE        shift, and go to state 161
    KW_BREAK        shift, and go to state 162
    KW_CONTINUE     shift, and go to state 163
    KW_RETURN       shift, and go to state 164
    KW_writeString  shift, and go to state 165
    KW_writeInt     shift, and go to state 166
    KW_writeReal    shift, and go to state 167
    IDENTIFIER      shift, and go to state 168
    '}'             shift, and go to state 334

    predefined_functions  go to state 170
    code                  go to state 171
    calculation           go to state 172
    return_action         go to state 173
    var_decl              go to state 174
    single_var_decl       go to state 8


State 329

   36 eleif: eleif KW_ELSE_IF '(' expr . ')' execution_body
   76 expr: expr . '+' expr
   77     | expr . '-' expr
   78     | expr . STARSTAR expr
   79     | expr . '*' expr
   80     | expr . '/' expr
   81     | expr . '%' expr
   83     | expr . KW_AND expr
   84     | expr . KW_OR expr
   85     | expr . ASSIGNASSIGN expr
   86     | expr . NOTEQUAL expr
   87     | expr . SMALLER expr
   88     | expr . SMALLEREQUAL expr
   89     | expr . BIGGER expr
   90     | expr . BIGGEREQUAL expr

    ASSIGNASSIGN  shift, and go to state 223
    NOTEQUAL      shift, and go to state 224
    SMALLER       shift, and go to state 225
    SMALLEREQUAL  shift, and go to state 226
    BIGGER        shift, and go to state 227
    BIGGEREQUAL   shift, and go to state 228
    KW_AND        shift, and go to state 229
    KW_OR         shift, and go to state 230
    '-'           shift, and go to state 231
    '+'           shift, and go to state 232
    '*'           shift, and go to state 233
    '/'           shift, and go to state 234
    '%'           shift, and go to state 235
    STARSTAR      shift, and go to state 236
    ')'           shift, and go to state 335


State 330

   14 predefined_functions: IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';' .

    $default  reduce using rule 14 (predefined_functions)


State 331

   16 predefined_functions: IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';' .

    $default  reduce using rule 16 (predefined_functions)


State 332

   24 code: KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';' .

    $default  reduce using rule 24 (code)


State 333

   35 eleif: KW_ELSE_IF '(' expr ')' execution_body .

    $default  reduce using rule 35 (eleif)


State 334

   25 code: KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' . ';'

    ';'  shift, and go to state 336


State 335

   12 predefined_functions: . IDENTIFIER ASSIGN KW_readString '(' ')' ';'
   13                     | . IDENTIFIER ASSIGN KW_readInt '(' ')' ';'
   14                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readInt '(' ')' ';'
   15                     | . IDENTIFIER ASSIGN KW_readReal '(' ')' ';'
   16                     | . IDENTIFIER '[' calc ']' ASSIGN KW_readReal '(' ')' ';'
   17                     | . KW_writeString '(' IDENTIFIER ')' ';'
   18                     | . KW_writeString '(' CONSTANT_STRING ')' ';'
   19                     | . KW_writeInt '(' calc ')' ';'
   20                     | . KW_writeReal '(' calc ')' ';'
   21 code: . predefined_functions
   22     | . calculation
   23     | . KW_IF '(' expr ')' execution_body ';'
   24     | . KW_IF '(' expr ')' execution_body KW_ELSE '{' body '}' ';'
   25     | . KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';'
   26     | . KW_FOR '(' calculation expr ';' calculation_not_semicolon ')' execution_body
   27     | . KW_FOR '(' calculation calculation_not_semicolon ')' execution_body
   28     | . KW_WHILE '(' expr ')' execution_body ';'
   29     | . KW_BREAK ';'
   30     | . KW_CONTINUE ';'
   31     | . IDENTIFIER '(' call_func_var ')' ';'
   32     | . IDENTIFIER ASSIGN IDENTIFIER '(' call_func_var ')' ';'
   33     | . var_decl
   34     | . return_action
   36 eleif: eleif KW_ELSE_IF '(' expr ')' . execution_body
   40 execution_body: . code
   41               | . '{' body '}'
   42 calculation: . IDENTIFIER ASSIGN calc ';'
   43            | . IDENTIFIER '[' INTERGER_CONSTANT ']' ASSIGN calc ';'
  106 return_action: . KW_RETURN ';'
  107              | . KW_RETURN calc ';'
  117 var_decl: . single_var_decl
  118         | . var_decl single_var_decl
  119 single_var_decl: . KW_VAR list_decl KW_REAL ';'
  120                | . KW_VAR list_decl KW_INT ';'
  121                | . KW_VAR list_decl KW_STRING ';'
  122                | . KW_VAR list_decl KW_BOOL ';'

    KW_VAR          shift, and go to state 1
    KW_IF           shift, and go to state 159
    KW_FOR          shift, and go to state 160
    KW_WHILE        shift, and go to state 161
    KW_BREAK        shift, and go to state 162
    KW_CONTINUE     shift, and go to state 163
    KW_RETURN       shift, and go to state 164
    KW_writeString  shift, and go to state 165
    KW_writeInt     shift, and go to state 166
    KW_writeReal    shift, and go to state 167
    IDENTIFIER      shift, and go to state 168
    '{'             shift, and go to state 273

    predefined_functions  go to state 170
    code                  go to state 274
    execution_body        go to state 337
    calculation           go to state 172
    return_action         go to state 173
    var_decl              go to state 174
    single_var_decl       go to state 8


State 336

   25 code: KW_IF '(' expr ')' execution_body eleif KW_ELSE '{' body '}' ';' .

    $default  reduce using rule 25 (code)


State 337

   36 eleif: eleif KW_ELSE_IF '(' expr ')' execution_body .

    $default  reduce using rule 36 (eleif)
